{"version":3,"sources":["components/Header/Header.jsx","asserts/DraggableItem.jsx","asserts/DroppableItem.jsx","components/Folders/ToDoList/AddTaskDialog.jsx","components/Folders/ToDoList/ToDo.jsx","asserts/AlertDialog.jsx","components/Folders/ToDoList/ToDoList.jsx","components/Folders/Folder/Folder.jsx","redux/todo.js","components/Folders/Folder/SetFolder.jsx","components/Folders/AddFolderDialog.jsx","components/Folders/Folders.jsx","redux/reduxStore.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","drawerWidth","window","innerWidth","updateStyles","isMobile","Android","navigator","userAgent","match","BlackBerry","iOS","Opera","Windows","any","makeStyles","theme","root","display","height","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","menuButton","marginRight","spacing","hide","width","flexShrink","drawerPaper","boxShadow","shadows","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","marginLeft","link","textDecoration","color","listText","palette","text","primary","Header","isLight","setIsLight","open","setOpen","children","classes","useTheme","handleDrawer","className","CssBaseline","AppBar","position","clsx","appBarShift","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","anchor","paper","direction","List","to","ListItem","button","ListItemIcon","ListItemText","DraggableItem","el","draggableId","id","index","provided","ref","innerRef","draggableProps","dragHandleProps","drag","placeholder","DroppableItem","droppableId","droppableProps","drop","AddTaskDialog","handleAddButton","addGoal","React","useState","hasError","setError","currentText","setCurrentText","handleAddNewGoal","Dialog","onClose","aria-labelledby","onKeyDown","e","key","preventDefault","DialogTitle","DialogContent","DialogContentText","TextField","error","helperText","autoFocus","margin","label","fullWidth","type","onChange","target","value","DialogActions","Button","ToDo","toggleCheckbox","toggleChecked","item","checked","checkedList","notCheckedList","notChecked","Box","Divider","divider","ListItemSecondaryAction","Checkbox","check","AlertDialog","question","handleSuccess","handleFail","aria-describedby","paddingLeft","paddingRight","list","flexDirection","borderBottom","action","selected","buttons","right","bottom","marginBottom","deleteButton","light","icon","background","default","ToDoList","setCurrentFolderById","currentFolder","deleteDone","swapTasks","useEffect","alertOpen","setAlertOpen","onDragEnd","result","destination","source","Object","values","goals","map","Tooltip","title","placement","Fab","size","card","borderWidth","btnContainer","shadow","Folder","headline","description","deleteFolder","setShadow","onMouseEnter","onMouseLeave","Card","CardContent","gutterBottom","component","CardActions","btn","initialState","folders","sync","state","folder","reducer","currentFolderCopy","newGoal","length","newGoals","foldersCopy","filter","i","currentGoals","newFolder","splice","from","removed","newFolders","curHeadline","setCurHeadline","curDescription","setCurDescription","errorDesc","errorHead","setErrorDesc","setErrorHead","textField","AddFolderDialog","addFolderDialog","SetFolder","flexWrap","maxWidth","container","addButton","mapDispatchToProps","addFolder","swapFolders","FoldersWithHooks","compose","connect","todo","withRouter","params","Grid","justify","reducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","_store","lightTheme","createMuiTheme","darkTheme","App","drawerOpened","setDrawerOpened","ThemeProvider","path","render","MainApp","Boolean","location","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e01360a6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\r\nimport SunIcon from \"@material-ui/icons/Brightness5Outlined\";\r\nimport MoonIcon from \"@material-ui/icons/Brightness2Outlined\";\r\n\r\nlet drawerWidth = window.innerWidth * 0.2;\r\nlet useStyles;\r\nupdateStyles();\r\n\r\nvar isMobile = {\r\n  Android: function() {\r\n    return navigator.userAgent.match(/Android/i);\r\n  },\r\n  BlackBerry: function() {\r\n    return navigator.userAgent.match(/BlackBerry/i);\r\n  },\r\n  iOS: function() {\r\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n  },\r\n  Opera: function() {\r\n    return navigator.userAgent.match(/Opera Mini/i);\r\n  },\r\n  Windows: function() {\r\n    return (\r\n      navigator.userAgent.match(/IEMobile/i) ||\r\n      navigator.userAgent.match(/WPDesktop/i)\r\n    );\r\n  },\r\n  any: function() {\r\n    return (\r\n      isMobile.Android() ||\r\n      isMobile.BlackBerry() ||\r\n      isMobile.iOS() ||\r\n      isMobile.Opera() ||\r\n      isMobile.Windows()\r\n    );\r\n  }\r\n};\r\n\r\nfunction updateStyles() {\r\n  useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: \"flex\",\r\n      height: \"100vh\"\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create([\"margin\", \"width\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      })\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2)\r\n    },\r\n    hide: {\r\n      display: \"none\"\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      boxShadow: theme.shadows[3]\r\n    },\r\n    drawerHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(0, 1),\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: \"flex-end\"\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      }),\r\n      marginLeft: -drawerWidth\r\n    },\r\n    link: {\r\n      textDecoration: \"none\",\r\n      color: \"black\"\r\n    },\r\n    listText: {\r\n      color: theme.palette.text.primary\r\n    }\r\n  }));\r\n}\r\n\r\nfunction Header({ isLight, setIsLight, open, setOpen, children }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  drawerWidth = window.innerWidth * (isMobile.any() ? 0.5 : 0.2);\r\n  updateStyles();\r\n\r\n  const handleDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  function toggleTheme() {\r\n    setIsLight(!isLight);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawer}\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            To do list\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawer}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <List>\r\n          <NavLink\r\n            to=\"/folders\"\r\n            className={classes.link}\r\n            onClick={() => setOpen(false)}\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <FolderOpenIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Folders\" className={classes.listText} />\r\n            </ListItem>\r\n          </NavLink>\r\n          <ListItem button onClick={toggleTheme}>\r\n            <ListItemIcon>{isLight ? <SunIcon /> : <MoonIcon />}</ListItemIcon>\r\n            <ListItemText\r\n              primary={isLight ? \"Light theme\" : \"Dark theme\"}\r\n              className={classes.listText}\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n\r\n      <main className={classes.content}>\r\n        <div>\r\n          <div className={classes.drawerHeader} />\r\n          {children}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nfunction DraggableItem({ el, classes, children }) {\r\n  return (\r\n    <Draggable draggableId={\"item-\" + el.id} index={el.id}>\r\n      {provided => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          className={classes ? classes.drag : \"\"}\r\n        >\r\n          {children}\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default DraggableItem;\r\n","import React from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n\r\nfunction DroppableItem({ classes, droppableId, children }) {\r\n  return (\r\n    <Droppable droppableId={droppableId}>\r\n      {provided => (\r\n        <div\r\n          {...provided.droppableProps}\r\n          ref={provided.innerRef}\r\n          className={classes ? classes.drop : \"\"}\r\n        >\r\n          {children}\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  );\r\n}\r\n\r\nexport default DroppableItem;\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nfunction AddTaskDialog({ handleAddButton, open, setOpen, addGoal }) {\r\n  const [hasError, setError] = React.useState(\"\");\r\n  const [currentText, setCurrentText] = React.useState(\"\");\r\n\r\n  const textChanged = e => {\r\n    setError(\"\");\r\n    setCurrentText(e.target.value);\r\n  };\r\n\r\n  const handleAddNewGoal = () => {\r\n    if (currentText !== \"\") {\r\n      addGoal(currentText);\r\n      setCurrentText(\"\");\r\n      setOpen(false);\r\n    } else {\r\n      setError(\"Field can not be empty\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleAddButton}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      onKeyDown={e => {\r\n        if (e.key === \"Enter\") {\r\n          e.preventDefault();\r\n          handleAddNewGoal();\r\n        } else if (e.key === \"Escape\") {\r\n          setOpen(false);\r\n          e.preventDefault();\r\n        }\r\n      }}\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Add a new goal</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          To accomplish your goals you need to know how to set them. You can't\r\n          simply expect it to happen. Goal setting is a process that starts with\r\n          careful consideration of what you want to achieve, and ends with a lot\r\n          of hard work to actually do it.\r\n        </DialogContentText>\r\n        <TextField\r\n          error={!!hasError}\r\n          helperText={hasError}\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Add goal\"\r\n          fullWidth\r\n          type=\"text\"\r\n          onChange={textChanged}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleAddButton} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleAddNewGoal} color=\"primary\">\r\n          Add\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default AddTaskDialog;\r\n","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nfunction ToDo({ el, classes, toggleCheckbox, toggleChecked }) {\r\n  return (\r\n    <ListItem\r\n      button\r\n      onClick={() => {\r\n        toggleChecked(el.id);\r\n      }}\r\n      className={\r\n        classes.item +\r\n        \" , \" +\r\n        (el.checked ? classes.checkedList : classes.notCheckedList)\r\n      }\r\n    >\r\n      <span className={el.checked ? classes.checked : classes.notChecked}>\r\n        {el.text}\r\n      </span>\r\n      <Box boxShadow={5}>\r\n        <Divider className={classes.divider} />\r\n      </Box>\r\n      <ListItemSecondaryAction>\r\n        <Checkbox\r\n          edge=\"end\"\r\n          className={classes.check}\r\n          checked={el.checked}\r\n          onChange={toggleCheckbox}\r\n          value={el.id}\r\n        />\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function AlertDialog({\r\n  question,\r\n  text,\r\n  open,\r\n  handleSuccess,\r\n  handleFail\r\n}) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={null}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{question}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {text}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleFail} color=\"primary\">\r\n          No\r\n        </Button>\r\n        <Button onClick={handleSuccess} color=\"primary\" autoFocus>\r\n          Yes\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport DraggableItem from \"../../../asserts/DraggableItem\";\r\nimport DroppableItem from \"../../../asserts/DroppableItem\";\r\nimport AddTaskDialog from \"./AddTaskDialog\";\r\nimport ToDo from \"./ToDo\";\r\nimport AlertDialog from \"../../../asserts/AlertDialog\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"relative\",\r\n    paddingLeft: \"10px\",\r\n    paddingRight: \"10px\"\r\n  },\r\n  list: {\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\"\r\n  },\r\n  item: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"relative\",\r\n    borderBottom: \"1px solid \" + theme.palette.action.selected,\r\n    boxShadow: theme.shadows[3]\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    position: \"fixed\",\r\n    right: 0,\r\n    bottom: 0,\r\n    marginRight: theme.spacing(2),\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  button: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  checked: {\r\n    textDecoration: \"line-through\"\r\n  },\r\n  deleteButton: {\r\n    marginRight: \"1%\"\r\n  },\r\n  divider: {\r\n    light: theme.palette.type\r\n  },\r\n  icon: {\r\n    color: theme.palette.background.default\r\n  }\r\n}));\r\n\r\nfunction ToDoList({\r\n  setCurrentFolderById,\r\n  id,\r\n  currentFolder,\r\n  toggleChecked,\r\n  addGoal,\r\n  deleteDone,\r\n  swapTasks\r\n}) {\r\n  useEffect(() => {\r\n    setCurrentFolderById(id);\r\n  });\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alertOpen, setAlertOpen] = React.useState(false);\r\n\r\n  const handleDeleteButton = () => {\r\n    setAlertOpen(true);\r\n  };\r\n\r\n  const handleAddButton = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const toggleCheckbox = e => {\r\n    if (e.target.value) toggleChecked(e.target.value);\r\n    else toggleChecked(e);\r\n  };\r\n\r\n  const onDragEnd = result => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    swapTasks(result.source.index, result.destination.index);\r\n  };\r\n\r\n  const handleFail = () => {\r\n    setAlertOpen(false);\r\n  };\r\n\r\n  const handleSuccess = () => {\r\n    setAlertOpen(false);\r\n    deleteDone();\r\n  };\r\n\r\n  const classes = useStyles();\r\n  if (!currentFolder) return null;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <DroppableItem classes={classes} droppableId=\"DroppableToDo\">\r\n          <List className={classes.list}>\r\n            {Object.values(currentFolder.goals).map(el => {\r\n              return (\r\n                <DraggableItem el={el} key={el.id}>\r\n                  <ToDo\r\n                    el={el}\r\n                    classes={classes}\r\n                    toggleCheckbox={toggleCheckbox}\r\n                    toggleChecked={toggleChecked}\r\n                  />\r\n                </DraggableItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </DroppableItem>\r\n      </DragDropContext>\r\n      <div>\r\n        <div className={classes.buttons}>\r\n          <div className={classes.deleteButton}>\r\n            <Tooltip\r\n              title=\"Delete done tasks\"\r\n              aria-label=\"delete\"\r\n              placement=\"bottom\"\r\n            >\r\n              <Fab\r\n                color=\"secondary\"\r\n                aria-label=\"add\"\r\n                size=\"medium\"\r\n                onClick={handleDeleteButton}\r\n                className={classes.button}\r\n              >\r\n                <DeleteIcon className={classes.icon} />\r\n              </Fab>\r\n            </Tooltip>\r\n          </div>\r\n          <Tooltip title=\"Add\" aria-label=\"add\" placement=\"bottom\">\r\n            <Fab\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n              size=\"medium\"\r\n              onClick={handleAddButton}\r\n              className={classes.button}\r\n            >\r\n              <AddIcon className={classes.icon} />\r\n            </Fab>\r\n          </Tooltip>\r\n        </div>\r\n        <AddTaskDialog\r\n          handleAddButton={handleAddButton}\r\n          open={open}\r\n          setOpen={setOpen}\r\n          addGoal={addGoal}\r\n        />\r\n        <AlertDialog\r\n          question=\"Delete all done tasks?\"\r\n          text=\"Do you really want to delete all the done tasks? You will be unable to restore them.\"\r\n          open={alertOpen}\r\n          handleSuccess={handleSuccess}\r\n          handleFail={handleFail}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  card: {\r\n    borderWidth: \"2px\",\r\n    width: \"100%\"\r\n  },\r\n  btnContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"black\"\r\n  },\r\n  shadow: {\r\n    width: \"100%\"\r\n  }\r\n}));\r\n\r\nfunction Folder({ id, headline, description, deleteFolder }) {\r\n  const classes = useStyles();\r\n  let [shadow, setShadow] = useState(2);\r\n  function deleteThisFolder() {\r\n    deleteFolder(id);\r\n  }\r\n  function shadowOn() {\r\n    setShadow(12);\r\n  }\r\n  function shadowOff() {\r\n    setShadow(2);\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box\r\n        boxShadow={shadow}\r\n        onMouseEnter={shadowOn}\r\n        onMouseLeave={shadowOff}\r\n        className={classes.shadow}\r\n      >\r\n        <Card variant=\"outlined\" className={classes.card}>\r\n          <NavLink to={`/folders/${id}`} className={classes.link}>\r\n            <CardContent>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n                component=\"h2\"\r\n                color=\"textPrimary\"\r\n              >\r\n                {headline}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {description}\r\n              </Typography>\r\n            </CardContent>\r\n          </NavLink>\r\n          <CardActions className={classes.btnContainer}>\r\n            <Button\r\n              size=\"large\"\r\n              color=\"secondary\"\r\n              className={classes.btn}\r\n              onClick={deleteThisFolder}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Folder;\r\n","const SET_CURRENT_FOLDER = \"todo/SET_CURRENT_FOLDER\"\r\nconst TOGGLE_CHECKED = \"todo/TOGGLE_CHECKED\"\r\nconst ADD_GOAL = \"todo/ADD_GOAL\"\r\nconst DELETE_FOLDER = \"todo/DELETE_FOLDER\"\r\nconst DELETE_DONE = \"todo/DELETE_DONE\"\r\nconst ADD_FOLDER = \"todo/ADD_FOLDER\"\r\nconst SWAP_TASKS = \"todo/SWAP_TASKS\"\r\nconst SWAP_FOLDERS = \"todo/SWAP_FOLDERS\"\r\n\r\nconst initialState = {\r\n    folders: [\r\n        {\r\n            id: 0,\r\n            headline: \"Anime goals\",\r\n            description: \"About this goals\",\r\n            goals: [\r\n                {\r\n                    id: 0,\r\n                    text: \"Watch 1 anime\",\r\n                    checked: true\r\n                },\r\n                {\r\n                    id: 1,\r\n                    text: \"Watch 2 anime\",\r\n                    checked: false\r\n                },\r\n                {\r\n                    id: 2,\r\n                    text: \"Watch 3 anime\",\r\n                    checked: false\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 1,\r\n            headline: \"Anime SUPERgoals\",\r\n            description: \"About this SUPERgoals\",\r\n            goals: [\r\n                {\r\n                    id: 0,\r\n                    text: \"Watch 4 anime\",\r\n                    checked: true\r\n                },\r\n                {\r\n                    id: 1,\r\n                    text: \"Watch 5 anime\",\r\n                    checked: false\r\n                },\r\n                {\r\n                    id: 2,\r\n                    text: \"Watch 7 anime\",\r\n                    checked: false\r\n                }\r\n                ,\r\n                {\r\n                    id: 3,\r\n                    text: \"Watch 9 anime\",\r\n                    checked: false\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 2,\r\n            headline: \"Anime SUPERgoals2\",\r\n            description: \"About this SUPERgoals\",\r\n            goals: [\r\n                {\r\n                    id: 0,\r\n                    text: \"Watch 4 anime\",\r\n                    checked: true\r\n                },\r\n                {\r\n                    id: 1,\r\n                    text: \"Watch 5 anime\",\r\n                    checked: false\r\n                },\r\n                {\r\n                    id: 2,\r\n                    text: \"Watch 7 anime\",\r\n                    checked: false\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    currentFolder: null\r\n}\r\n\r\nfunction sync(state, folder) {\r\n    state.folders[state.currentFolder.id] = folder\r\n}\r\n\r\nfunction reducer(state = initialState, action) {\r\n    if (action.type === SET_CURRENT_FOLDER) {\r\n        return {\r\n            ...state,\r\n            currentFolder: state.folders[action.id]\r\n        }\r\n    }\r\n    else if (action.type === TOGGLE_CHECKED) {\r\n        let currentFolderCopy = { ...state.currentFolder }\r\n        currentFolderCopy.goals[action.id].checked = !currentFolderCopy.goals[action.id].checked\r\n        sync(state, currentFolderCopy)\r\n        return {\r\n            ...state,\r\n            currentFolder: currentFolderCopy\r\n        };\r\n    }\r\n    else if (action.type === ADD_GOAL) {\r\n        let currentFolderCopy = { ...state.currentFolder }\r\n        const newGoal = {\r\n            id: state.currentFolder.goals.length,\r\n            text: action.text,\r\n            checked: false\r\n        }\r\n        const newGoals = [...currentFolderCopy.goals, newGoal];\r\n        currentFolderCopy.goals = newGoals\r\n        sync(state, currentFolderCopy)\r\n        return {\r\n            ...state,\r\n            currentFolder: currentFolderCopy\r\n        }\r\n    }\r\n    else if (action.type === DELETE_FOLDER) {\r\n        let foldersCopy = [...state.folders]\r\n        foldersCopy = foldersCopy.filter(el => {\r\n            return action.id !== el.id\r\n        })\r\n        for (let i = action.id; i < foldersCopy.length; ++i) {\r\n            --foldersCopy[i].id;\r\n        }\r\n        return {\r\n            ...state,\r\n            folders: foldersCopy\r\n        }\r\n    }\r\n    else if (action.type === DELETE_DONE) {\r\n        let currentGoals = [...state.currentFolder.goals]\r\n        currentGoals = currentGoals.filter(el => {\r\n            return !el.checked\r\n        })\r\n        for (let i = 0; i < currentGoals.length; ++i) {\r\n            currentGoals[i].id = i;\r\n        }\r\n        sync(state, {\r\n            ...state.currentFolder,\r\n            goals: currentGoals\r\n        })\r\n        return {\r\n            ...state,\r\n            currentFolder: {\r\n                ...state.currentFolder,\r\n                goals: currentGoals\r\n            }\r\n        };\r\n    }\r\n    else if (action.type === ADD_FOLDER) {\r\n        const newFolder = {\r\n            id: state.folders.length,\r\n            headline: action.headline,\r\n            description: action.description,\r\n            goals: []\r\n        }\r\n        return {\r\n            ...state,\r\n            folders: [\r\n                ...state.folders,\r\n                newFolder\r\n            ]\r\n        }\r\n    }\r\n    else if (action.type === SWAP_TASKS) {\r\n        let newGoals = [\r\n            ...state.currentFolder.goals\r\n        ]\r\n        const [removed] = newGoals.splice(action.from, 1);\r\n        newGoals.splice(action.to, 0, removed);\r\n\r\n        for (let i = 0; i < newGoals.length; ++i) {\r\n            newGoals[i].id = i;\r\n        }\r\n\r\n        sync(state, { ...state.currentFolder, goals: [...newGoals] });\r\n\r\n        return {\r\n            ...state,\r\n            currentFolder: {\r\n                ...state.currentFolder,\r\n                goals: [...newGoals]\r\n            }\r\n        }\r\n    }\r\n    else if (action.type === SWAP_FOLDERS) {\r\n        let newFolders = [\r\n            ...state.folders\r\n        ]\r\n\r\n        const [removed] = newFolders.splice(action.from, 1);\r\n        newFolders.splice(action.to, 0, removed);\r\n\r\n        for (let i = 0; i < newFolders.length; ++i) {\r\n            newFolders[i].id = i;\r\n        }\r\n\r\n        return {\r\n            ...state,\r\n            folders: [...newFolders]\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport const setCurrentFolderById = (id) => ({ type: SET_CURRENT_FOLDER, id })\r\nexport const toggleChecked = (id) => ({ type: TOGGLE_CHECKED, id })\r\nexport const addGoal = (text) => ({ type: ADD_GOAL, text })\r\nexport const deleteFolder = (id) => ({ type: DELETE_FOLDER, id })\r\nexport const deleteDone = () => ({ type: DELETE_DONE })\r\nexport const addFolder = (headline, description) => ({ type: ADD_FOLDER, headline, description })\r\nexport const swapTasks = (from, to) => ({ type: SWAP_TASKS, from, to })\r\nexport const swapFolders = (from, to) => ({ type: SWAP_FOLDERS, from, to })\r\n\r\nexport default reducer;","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DialogContent } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({}));\r\n\r\nfunction Folder({\r\n  curHeadline,\r\n  setCurHeadline,\r\n  curDescription,\r\n  setCurDescription,\r\n  errorDesc,\r\n  errorHead,\r\n  setErrorDesc,\r\n  setErrorHead\r\n}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <DialogContent className={classes.card}>\r\n      <TextField\r\n        className={classes.textField}\r\n        error={!!errorHead}\r\n        helperText={errorHead}\r\n        margin=\"dense\"\r\n        id=\"headline\"\r\n        label=\"Headline\"\r\n        fullWidth\r\n        value={curHeadline}\r\n        onChange={e => {\r\n          setCurHeadline(e.target.value);\r\n          setErrorDesc(\"\");\r\n          setErrorHead(\"\");\r\n        }}\r\n      ></TextField>\r\n      <TextField\r\n        className={classes.textField}\r\n        error={!!errorDesc}\r\n        helperText={errorDesc}\r\n        margin=\"dense\"\r\n        id=\"description\"\r\n        label=\"Description\"\r\n        fullWidth\r\n        value={curDescription}\r\n        onChange={e => {\r\n          setCurDescription(e.target.value);\r\n          setErrorDesc(\"\");\r\n          setErrorHead(\"\");\r\n        }}\r\n      ></TextField>\r\n    </DialogContent>\r\n  );\r\n}\r\n\r\nexport default Folder;\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SetFolder from \"./Folder/SetFolder\";\r\n\r\nfunction AddFolderDialog({\r\n  classes,\r\n  open,\r\n  setOpen,\r\n  curHeadline,\r\n  setCurHeadline,\r\n  curDescription,\r\n  setCurDescription,\r\n  errorHead,\r\n  errorDesc,\r\n  setErrorHead,\r\n  setErrorDesc,\r\n  handleAddButton\r\n}) {\r\n  return (\r\n    <Dialog\r\n      className={classes.addFolderDialog}\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      aria-labelledby=\"form-dialog-folders\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-folders\">Add new folder</DialogTitle>\r\n      <SetFolder\r\n        curHeadline={curHeadline}\r\n        setCurHeadline={setCurHeadline}\r\n        curDescription={curDescription}\r\n        setCurDescription={setCurDescription}\r\n        errorHead={errorHead}\r\n        errorDesc={errorDesc}\r\n        setErrorHead={setErrorHead}\r\n        setErrorDesc={setErrorDesc}\r\n      />\r\n      <DialogActions>\r\n        <Button onClick={() => setOpen(false)} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleAddButton} color=\"primary\">\r\n          Add\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default AddFolderDialog;\r\n","import React from \"react\";\r\nimport ToDoList from \"./ToDoList/ToDoList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Folder from \"./Folder/Folder\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport {\r\n  setCurrentFolderById,\r\n  toggleChecked,\r\n  addGoal,\r\n  deleteFolder,\r\n  deleteDone,\r\n  addFolder,\r\n  swapTasks,\r\n  swapFolders\r\n} from \"./../../redux/todo\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport DroppableItem from \"../../asserts/DroppableItem\";\r\nimport DraggableItem from \"../../asserts/DraggableItem\";\r\nimport AddFolderDialog from \"./AddFolderDialog\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    position: \"block\",\r\n    flexWrap: \"wrap\",\r\n    flexGrow: 1,\r\n    \"& > *\": {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  item: {\r\n    maxWidth: \"100%\"\r\n  },\r\n  drop: {\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n  },\r\n  drag: {\r\n    width: \"100%\"\r\n  },\r\n  container: {\r\n    position: \"relative\",\r\n    height: \"100%\",\r\n    width: \"100%\"\r\n  },\r\n  addButton: {\r\n    position: \"fixed\",\r\n    right: 0,\r\n    bottom: 0,\r\n    marginRight: theme.spacing(2),\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  icon: {\r\n    color: theme.palette.background.default\r\n  }\r\n}));\r\n\r\nfunction Folders({\r\n  folders,\r\n  match,\r\n  setCurrentFolderById,\r\n  currentFolder,\r\n  toggleChecked,\r\n  addGoal,\r\n  deleteFolder,\r\n  deleteDone,\r\n  addFolder,\r\n  swapTasks,\r\n  swapFolders\r\n}) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [curHeadline, setCurHeadline] = React.useState(\"\");\r\n  const [curDescription, setCurDescription] = React.useState(\"\");\r\n  const [errorHead, setErrorHead] = React.useState(\"\");\r\n  const [errorDesc, setErrorDesc] = React.useState(\"\");\r\n\r\n  function handleAddButton() {\r\n    if (curHeadline !== \"\") {\r\n      if (curDescription !== \"\") {\r\n        addFolder(curHeadline, curDescription);\r\n        setCurDescription(\"\");\r\n        setCurHeadline(\"\");\r\n        setOpen(false);\r\n        setErrorDesc(\"\");\r\n        setErrorHead(\"\");\r\n      } else {\r\n        setErrorDesc(\"Field can not be empty\");\r\n      }\r\n    } else {\r\n      setErrorHead(\"Field can not be empty\");\r\n    }\r\n  }\r\n\r\n  function onDragEnd(result) {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    swapFolders(result.source.index, result.destination.index);\r\n  }\r\n\r\n  if (match.params.currentFolder)\r\n    return (\r\n      <div>\r\n        <ToDoList\r\n          id={match.params.currentFolder}\r\n          setCurrentFolderById={setCurrentFolderById}\r\n          currentFolder={currentFolder}\r\n          toggleChecked={toggleChecked}\r\n          addGoal={addGoal}\r\n          deleteDone={deleteDone}\r\n          swapTasks={swapTasks}\r\n        />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <DroppableItem classes={classes} droppableId=\"DroppableFolder\">\r\n          <Grid container spacing={2} className={classes.container}>\r\n            {folders.map(el => {\r\n              return (\r\n                <Grid key={el.id} container item justify=\"center\">\r\n                  <DraggableItem el={el} classes={classes}>\r\n                    <Folder\r\n                      className={classes.item}\r\n                      id={el.id}\r\n                      description={el.description}\r\n                      headline={el.headline}\r\n                      goals={el.goals}\r\n                      deleteFolder={deleteFolder}\r\n                    />\r\n                  </DraggableItem>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </DroppableItem>\r\n        <div className={classes.addButton}>\r\n          <Tooltip title=\"Add\" aria-label=\"add\" placement=\"bottom\">\r\n            <Fab\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n              size=\"medium\"\r\n              onClick={() => setOpen(true)}\r\n            >\r\n              <AddIcon className={classes.icon} />\r\n            </Fab>\r\n          </Tooltip>\r\n        </div>\r\n        <AddFolderDialog\r\n          classes={classes}\r\n          open={open}\r\n          setOpen={setOpen}\r\n          curHeadline={curHeadline}\r\n          setCurHeadline={setCurHeadline}\r\n          curDescription={curDescription}\r\n          setCurDescription={setCurDescription}\r\n          errorHead={errorHead}\r\n          errorDesc={errorDesc}\r\n          setErrorHead={setErrorHead}\r\n          setErrorDesc={setErrorDesc}\r\n          handleAddButton={handleAddButton}\r\n        />\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  folders: state.todo.folders,\r\n  currentFolder: state.todo.currentFolder\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setCurrentFolderById,\r\n  toggleChecked,\r\n  addGoal,\r\n  deleteFolder,\r\n  deleteDone,\r\n  addFolder,\r\n  swapTasks,\r\n  swapFolders\r\n};\r\n\r\nconst FoldersWithHooks = compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withRouter\r\n)(Folders);\r\n\r\nexport default FoldersWithHooks;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport todo from \"./todo\"\r\n\r\nconst reducers = combineReducers({\r\n    todo: todo\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\nwindow._store = store // debug only\r\nexport default store;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Folders from './components/Folders/Folders';\nimport store from './redux/reduxStore'\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst lightTheme = createMuiTheme({\n  palette: {\n    type: \"light\"\n  }\n});\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\n\nconst App = () => {\n  const [isLight, setIsLight] = React.useState(true)\n  const [drawerOpened, setDrawerOpened] = React.useState(false)\n  return (\n    <div className=\"app-wrapper\">\n      <ThemeProvider theme={isLight ? lightTheme : darkTheme}>\n        <Header isLight={isLight} setIsLight={setIsLight} open={drawerOpened} setOpen={setDrawerOpened}>\n          <Route path=\"/folders/:currentFolder?\" render={() => <Folders />} />\n        </Header>\n      </ThemeProvider>\n      <div className={drawerOpened ? \"overlay\" : \"\"} onClick={() => { setDrawerOpened(false) }} />\n    </div >\n  );\n}\n\nconst MainApp = () => {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  )\n};\n\nexport default MainApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}