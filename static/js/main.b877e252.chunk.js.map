{"version":3,"sources":["types/index_d.ts","redux/actions/ui.ts","redux/constants/ui.ts","redux/reducers/todo.ts","redux/constants/todo.ts","redux/reducers/ui.ts","redux/reduxStore.ts","utils/helpers.ts","components/Header/FoldersTreeView.tsx","assets/Buttons.tsx","components/Header/Dialogs/AddTagDialog.tsx","components/Header/Dialogs/EditTagDialog.tsx","redux/actions/todo.ts","components/Header/Dialogs/AddFolderDialog.tsx","components/Header/Dialogs/EditFolderDialog.tsx","components/Header/HeaderDrawer.tsx","components/Header/Header.tsx","assets/DraggableItem.tsx","assets/DroppableItem.tsx","components/ToDoList/TaskDetails/TaskDetails.tsx","components/ToDoList/ToDo.tsx","assets/BorderlessInput.tsx","components/ToDoList/AddGoal.tsx","components/ToDoList/FolderLabel.tsx","components/ToDoList/ToDoList.tsx","components/Folders.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["DrawerTypeEnum","setDrawerModeAction","type","action","initialState","folders","id","headline","shown","goals","text","note","tag","undefined","checked","editing","tags","name","color","currentFolders","reducer","state","payload","folderId","reduceItem","folder","map","goal","goalIndex","length","filter","el","i","newFolder","from","to","fromFolderId","toFolderId","slice","newGoal","goalIdx","newNote","taskId","tagId","newName","newHeadline","drawerMode","Menu","isLight","drawerOpened","pageTitle","open","newTitle","rootReducer","combineReducers","todo","ui","useTypedSelector","useSelector","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","isMobile","Android","navigator","userAgent","match","BlackBerry","iOS","Opera","Windows","any","array","index","combineStyles","styles","reduce","style","cur","getIntSecondPart","str","symbol","parseInt","split","useCombinedRefs","refs","useCallback","element","forEach","ref","current","useStyles","makeStyles","theme","root","padding","labelText","fontWeight","flexGrow","labelRoot","display","alignItems","iconEditButton","palette","primary","main","iconAddButton","light","listItem","height","paddingLeft","maxWidth","overflow","bottomListItem","expandIcon","minWidth","marginRight","marginLeft","FoldersTreeView","openAddTag","openEditTag","openSetFolder","openEditFolder","setEditTagName","setEditTagId","setHeadline","setCurrentFolderId","classes","useState","foldersOpened","setFoldersOpened","tagsOpened","setTagsOpened","List","className","ListItem","button","onClick","ListItemIcon","ListItemText","Typography","variant","alignSelf","pointerEvents","ListItemSecondaryAction","IconButton","fontSize","Collapse","in","key","bold","cancel","active","CancelDialogButton","props","Button","DeleteDialogButton","delete","ApplyDialogButton","item","width","position","borderBottom","selected","borderTop","boxShadow","shadows","cursor","zIndex","marginBottom","paddingRight","textDecoration","notSelectable","userSelect","title","picker","AddTagDialog","setOpen","addTag","useTheme","setChecked","setColor","tagName","setTagName","handleClose","Dialog","onClose","DialogTitle","Input","value","onChange","e","target","DialogContent","borderLeft","checkbox","Checkbox","edge","onChangeComplete","newColor","event","console","log","hex","DialogActions","EditTagDialog","setNewName","dispatch","useDispatch","editTag","editTagAction","useEffect","AddFolderDialog","addFolder","folderName","addFolderAction","placeholder","autoFocus","EditFolderDialog","setNewHeadline","editFolder","folderIdEdit","editFolderAction","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","justifyContent","fullHeight","switcher","moon","grey","sun","HeaderDrawer","addTagOpened","setAddTagOpened","editTagOpened","setEditTagOpened","folderSetOpened","setFolderSetOpened","editFolderOpened","setEditFolderOpened","editTagId","currentFolderId","editTagName","setIsLight","setIsLightAction","Drawer","anchor","paper","addTagAction","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","background","menuButton","spacing","content","Header","children","CssBaseline","AppBar","Toolbar","aria-label","noWrap","DraggableItem","adding","getItemStyle","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","isDragging","DroppableItem","horizontal","droppableId","direction","droppableProps","buttons","notes","flexDirection","taskInput","infoFontSize","notesLabel","marginTop","dialogTitle","paddingBottom","chip","fontFamily","borderStyle","letterSpacing","secondary","boxSizing","TaskDetails","setGoal","setNote","deleteTask","setTag","deleteTag","newTagId","setNewTagId","deletedTags","setDeletedTags","useForm","register","handleSubmit","errors","onSubmit","data","goalText","noteText","tagDeleted","deletedTagId","TextField","inputRef","required","maxLength","message","InputProps","input","defaultValue","fullWidth","error","helperText","Chip","label","borderColor","disabled","borderWidth","onDelete","checkedText","opacity","ToDo","toggleCheckbox","currentColor","Tooltip","placement","arrow","setGoalAction","setNoteAction","deleteTaskAction","setTagAction","deleteTagAction","BorderlessInput","forwardRef","border","outline","textField","borderRadius","sendButton","icon","focusedButton","AddGoal","useRef","addGoal","addGoalAction","moving","setMoving","focused","setFocused","useSpring","transform","immediate","config","mass","tension","friction","velocity","clamp","onRest","props2","setValue","focus","div","onFocus","onBlur","divider","test","FolderLabel","anchorEl","setAnchorEl","tooltipOpened","setTooltipOpened","setCurrentFolders","setCurrentFoldersAction","swapCurrentFolders","swapCurrentFoldersAction","Divider","orientation","currentTarget","keepMounted","Boolean","MenuItem","list","ToDoList","currentFolder","toggleChecked","toggleCheckedAction","draggableStyle","align","toString","Folders","swapTasks","swapTasksAction","Grid","container","justify","onDragEnd","result","destination","source","xs","sm","md","lightTheme","createMuiTheme","success","dark","default","darkTheme","disabledBackground","App","setDrawerOpened","setDrawerOpenedAction","ThemeProvider","path","render","exact","MainApp","location","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b877e252.chunk.js","sourcesContent":["import { TodosAction } from \"./../redux/reducers/todo\";\r\nimport { UiAction } from \"./../redux/reducers/ui\";\r\n\r\ndeclare module \"@material-ui/core/styles/createPalette\" {\r\n\tinterface Palette {\r\n\t\tchip: React.CSSProperties[\"color\"];\r\n\t}\r\n\tinterface PaletteOptions {\r\n\t\tchip: React.CSSProperties[\"color\"];\r\n\t}\r\n}\r\n\r\nexport type GoalType = {\r\n\tid: number;\r\n\ttext: string;\r\n\tnote: string;\r\n\ttag: number | undefined;\r\n\tchecked: boolean;\r\n\tediting: boolean;\r\n};\r\n\r\nexport type FolderType = {\r\n\tid: number;\r\n\theadline: string;\r\n\tshown: boolean;\r\n\tgoals: Array<GoalType>;\r\n};\r\n\r\nexport type FolderFormDataType = {\r\n\theadline: string;\r\n\tdescription: string;\r\n};\r\n\r\nexport type TaskFormDataType = {\r\n\tgoalText: string;\r\n};\r\n\r\nexport type TaskDetailsFormType = {\r\n\tgoalText: string;\r\n\tnoteText: string;\r\n};\r\n\r\nexport enum DrawerTypeEnum {\r\n\tMenu = 1,\r\n\tBack,\r\n}\r\n\r\nexport type TagType = {\r\n\tname: string;\r\n\tcolor: string;\r\n};\r\n\r\nexport type MyActionType = UiAction | TodosAction;\r\n","import { action } from \"typesafe-actions\";\r\nimport * as constants from \"../constants/ui\";\r\nimport { DrawerTypeEnum } from \"../../types/index_d\";\r\n\r\nexport const setDrawerModeAction = (type: DrawerTypeEnum) =>\r\n    action(constants.SET_DRAWER_MODE, { type });\r\n\r\nexport const setIsLightAction = (isLight: boolean) =>\r\n    action(constants.SET_IS_LIGHT, { isLight });\r\n\r\nexport const setDrawerOpenedAction = (open: boolean) =>\r\n    action(constants.SET_DRAWER_OPENED, { open });\r\n\r\nexport const setPageTitleAction = (newTitle: string) =>\r\n    action(constants.SET_PAGE_TITLE, { newTitle });\r\n","export const SET_DRAWER_MODE = \"ui/SET_DRAWER_MODE\";\r\nexport const SET_IS_LIGHT = \"ui/SET_IS_LIGHT\";\r\nexport const SET_DRAWER_OPENED = \"ui/SET_DRAWER_OPENED\";\r\nexport const SET_PAGE_TITLE = \"ui/SET_PAGE_TITLE\";\r\n","import { setDrawerModeAction } from \"./../actions/ui\";\r\nimport { ActionType } from \"typesafe-actions\";\r\nimport * as actions from \"../actions/todo\";\r\nimport * as constants from \"./../constants/todo\";\r\nimport { reduceItem } from \"../reduxStore\";\r\nimport { TagType } from \"../../types/index_d\";\r\n\r\nconst initialState = {\r\n\tfolders: [\r\n\t\t{\r\n\t\t\tid: 0,\r\n\t\t\theadline: \"Purchasing\",\r\n\t\t\tshown: true,\r\n\t\t\tgoals: [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 0,\r\n\t\t\t\t\ttext: \"onion\",\r\n\t\t\t\t\tnote: \"don't forget to smile\",\r\n\t\t\t\t\ttag: undefined as undefined | number,\r\n\t\t\t\t\tchecked: true,\r\n\t\t\t\t\tediting: false,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 1,\r\n\t\t\t\t\ttext: \"carrot\",\r\n\t\t\t\t\tnote: \"don't forget to smile\",\r\n\t\t\t\t\ttag: undefined as undefined | number,\r\n\t\t\t\t\tchecked: false,\r\n\t\t\t\t\tediting: false,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 2,\r\n\t\t\t\t\ttext: \"cucumber\",\r\n\t\t\t\t\tnote: \"don't forget to smile\",\r\n\t\t\t\t\ttag: undefined as undefined | number,\r\n\t\t\t\t\tchecked: false,\r\n\t\t\t\t\tediting: false,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\theadline: \"Goals\",\r\n\t\t\tshown: true,\r\n\t\t\tgoals: [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 0,\r\n\t\t\t\t\ttext: \"Watch 4 anime\",\r\n\t\t\t\t\tnote: \"don't forget to smile\",\r\n\t\t\t\t\ttag: undefined as undefined | number,\r\n\t\t\t\t\tchecked: true,\r\n\t\t\t\t\tediting: false,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 1,\r\n\t\t\t\t\ttext: \"Watch 5 anime\",\r\n\t\t\t\t\tnote: \"don't forget to smile\",\r\n\t\t\t\t\ttag: undefined as undefined | number,\r\n\t\t\t\t\tchecked: false,\r\n\t\t\t\t\tediting: false,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 2,\r\n\t\t\t\t\ttext: \"Watch 7 anime\",\r\n\t\t\t\t\tnote: \"don't forget to smile\",\r\n\t\t\t\t\ttag: undefined as undefined | number,\r\n\t\t\t\t\tchecked: false,\r\n\t\t\t\t\tediting: false,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 3,\r\n\t\t\t\t\ttext: \"Watch 9 anime\",\r\n\t\t\t\t\tnote: \"don't forget to smile\",\r\n\t\t\t\t\ttag: undefined as undefined | number,\r\n\t\t\t\t\tchecked: false,\r\n\t\t\t\t\tediting: false,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\theadline: \"Headline\",\r\n\t\t\tshown: true,\r\n\t\t\tgoals: [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 0,\r\n\t\t\t\t\ttext: \"Watch 4 anime\",\r\n\t\t\t\t\tnote: \"don't forget to smile\",\r\n\t\t\t\t\ttag: 0 as undefined | number,\r\n\t\t\t\t\tchecked: true,\r\n\t\t\t\t\tediting: false,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 1,\r\n\t\t\t\t\ttext: \"Watch 5 anime\",\r\n\t\t\t\t\tnote: \"don't forget to smile\",\r\n\t\t\t\t\ttag: undefined as undefined | number,\r\n\t\t\t\t\tchecked: false,\r\n\t\t\t\t\tediting: false,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 2,\r\n\t\t\t\t\ttext: \"Watch 7 anime\",\r\n\t\t\t\t\tnote: \"don't forget to smile\",\r\n\t\t\t\t\ttag: undefined as undefined | number,\r\n\t\t\t\t\tchecked: false,\r\n\t\t\t\t\tediting: false,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t],\r\n\ttags: [\r\n\t\t{ name: \"important\", color: \"#FF69B4\" },\r\n\t\t{ name: \"work\", color: \"#0000FF\" },\r\n\t] as Array<TagType>,\r\n\tcurrentFolders: [0, 1, 2] as number[],\r\n};\r\n\r\ntype StateType = typeof initialState;\r\nexport type TodosAction = ActionType<typeof actions>;\r\n\r\nconst reducer = (state = initialState, action: TodosAction): StateType => {\r\n\tswitch (action.type) {\r\n\t\tcase constants.TOGGLE_CHECKED: {\r\n\t\t\tconst { id, folderId } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfolders: reduceItem(state.folders, folderId, (folder) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...folder,\r\n\t\t\t\t\t\tgoals: folder.goals.map((goal, goalIndex) => {\r\n\t\t\t\t\t\t\tif (goalIndex === id) {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t...goal,\r\n\t\t\t\t\t\t\t\t\tchecked: !goal.checked,\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn goal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t};\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.ADD_GOAL: {\r\n\t\t\tconst { text, folderId } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfolders: reduceItem(state.folders, folderId, (folder) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...folder,\r\n\t\t\t\t\t\tgoals: [\r\n\t\t\t\t\t\t\t...folder.goals,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tid: state.folders[folderId].goals.length,\r\n\t\t\t\t\t\t\t\ttext: text,\r\n\t\t\t\t\t\t\t\tnote: \"\",\r\n\t\t\t\t\t\t\t\ttag: undefined as undefined | number,\r\n\t\t\t\t\t\t\t\tchecked: false,\r\n\t\t\t\t\t\t\t\tediting: false,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t};\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.DELETE_FOLDER: {\r\n\t\t\tconst { id } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfolders: state.folders\r\n\t\t\t\t\t.filter((el) => id !== el.id)\r\n\t\t\t\t\t.map((folder, i) => ({ ...folder, id: i })),\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.DELETE_DONE: {\r\n\t\t\tconst { folderId } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfolders: reduceItem(state.folders, folderId, (folder) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...folder,\r\n\t\t\t\t\t\tgoals: folder.goals\r\n\t\t\t\t\t\t\t.filter((goal) => !goal.checked)\r\n\t\t\t\t\t\t\t.map((goal, i) => ({\r\n\t\t\t\t\t\t\t\t...goal,\r\n\t\t\t\t\t\t\t\tid: i,\r\n\t\t\t\t\t\t\t})),\r\n\t\t\t\t\t};\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.ADD_FOLDER: {\r\n\t\t\tconst { headline } = action.payload;\r\n\r\n\t\t\tconst newFolder = {\r\n\t\t\t\tid: state.folders.length,\r\n\t\t\t\theadline: headline,\r\n\t\t\t\tsetDrawerModeAction,\r\n\t\t\t\tshown: false,\r\n\t\t\t\tgoals: [],\r\n\t\t\t};\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfolders: [...state.folders, newFolder],\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.SWAP_TASKS: {\r\n\t\t\tlet { from, to, fromFolderId, toFolderId } = action.payload;\r\n\r\n\t\t\tif (fromFolderId === toFolderId) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tfolders: reduceItem(state.folders, fromFolderId, (folder) => ({\r\n\t\t\t\t\t\t...folder,\r\n\t\t\t\t\t\tgoals: (to > from\r\n\t\t\t\t\t\t\t? [\r\n\t\t\t\t\t\t\t\t\t...folder.goals.slice(0, from),\r\n\t\t\t\t\t\t\t\t\t...folder.goals.slice(from + 1, to + 1),\r\n\t\t\t\t\t\t\t\t\tfolder.goals[from],\r\n\t\t\t\t\t\t\t\t\t...folder.goals.slice(to + 1, folder.goals.length),\r\n\t\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t\t: [\r\n\t\t\t\t\t\t\t\t\t...folder.goals.slice(0, to),\r\n\t\t\t\t\t\t\t\t\tfolder.goals[from],\r\n\t\t\t\t\t\t\t\t\t...folder.goals.slice(to, from),\r\n\t\t\t\t\t\t\t\t\t...folder.goals.slice(from + 1, folder.goals.length),\r\n\t\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t).map((goal, i) => ({\r\n\t\t\t\t\t\t\t...goal,\r\n\t\t\t\t\t\t\tid: i,\r\n\t\t\t\t\t\t})),\r\n\t\t\t\t\t})),\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfolders: state.folders.map((folder, folderId) => {\r\n\t\t\t\t\tif (folderId === fromFolderId) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...folder,\r\n\t\t\t\t\t\t\tgoals: [\r\n\t\t\t\t\t\t\t\t...folder.goals.slice(0, from),\r\n\t\t\t\t\t\t\t\t...folder.goals.slice(from + 1, folder.goals.length),\r\n\t\t\t\t\t\t\t].map((folder, i) => ({ ...folder, id: i })),\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (folderId === toFolderId) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...folder,\r\n\t\t\t\t\t\t\tgoals: [\r\n\t\t\t\t\t\t\t\t...folder.goals.slice(0, to),\r\n\t\t\t\t\t\t\t\tstate.folders[fromFolderId].goals[from],\r\n\t\t\t\t\t\t\t\t...folder.goals.slice(\r\n\t\t\t\t\t\t\t\t\tto,\r\n\t\t\t\t\t\t\t\t\tstate.folders[toFolderId].goals.length\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t].map((folder, i) => ({ ...folder, id: i })),\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn folder;\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.SET_GOAL: {\r\n\t\t\tconst { id, newGoal, folderId } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfolders: reduceItem(state.folders, folderId, (folder) => ({\r\n\t\t\t\t\t...folder,\r\n\t\t\t\t\tgoals: folder.goals.map((goal, goalIdx) => {\r\n\t\t\t\t\t\tif (goalIdx !== id) return goal;\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...goal,\r\n\t\t\t\t\t\t\ttext: newGoal,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}),\r\n\t\t\t\t})),\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.DELETE_CURRENT_FOLDER: {\r\n\t\t\tconst { folderId } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfolders: state.folders\r\n\t\t\t\t\t.filter((folder) => folder.id !== folderId)\r\n\t\t\t\t\t.map((folder, i) => ({ ...folder, id: i })),\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.SET_NOTE: {\r\n\t\t\tconst { id, newNote, folderId } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfolders: reduceItem(state.folders, folderId, (folder) => ({\r\n\t\t\t\t\t...folder,\r\n\t\t\t\t\tgoals: folder.goals.map((goal, i) => {\r\n\t\t\t\t\t\tif (i === id) return { ...goal, note: newNote };\r\n\t\t\t\t\t\telse return goal;\r\n\t\t\t\t\t}),\r\n\t\t\t\t})),\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.DELETE_TASK: {\r\n\t\t\tconst { taskId, folderId } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfolders: reduceItem(state.folders, folderId, (folder) => ({\r\n\t\t\t\t\t...folder,\r\n\t\t\t\t\tgoals: folder.goals\r\n\t\t\t\t\t\t.filter((goal) => goal.id !== taskId)\r\n\t\t\t\t\t\t.map((goal, i) => ({ ...goal, id: i })),\r\n\t\t\t\t})),\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.SET_TAG: {\r\n\t\t\tconst { taskId, tagId, folderId } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfolders: reduceItem(state.folders, folderId, (folder) => ({\r\n\t\t\t\t\t...folder,\r\n\t\t\t\t\tgoals: folder.goals.map((goal) => {\r\n\t\t\t\t\t\tif (goal.id === taskId)\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...goal,\r\n\t\t\t\t\t\t\t\ttag: tagId,\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\telse return goal;\r\n\t\t\t\t\t}),\r\n\t\t\t\t})),\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.DELETE_TAG: {\r\n\t\t\tconst { tagId } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfolders: state.folders.map((folder) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...folder,\r\n\t\t\t\t\t\tgoals: folder.goals.map((goal) => {\r\n\t\t\t\t\t\t\tif (goal.tag === undefined || goal.tag < tagId) return goal;\r\n\t\t\t\t\t\t\tif (goal.tag === tagId)\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t...goal,\r\n\t\t\t\t\t\t\t\t\ttag: undefined as number | undefined,\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tif (goal.tag > tagId)\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t...goal,\r\n\t\t\t\t\t\t\t\t\ttag: (goal.tag - 1) as number | undefined,\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\treturn goal;\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t};\r\n\t\t\t\t}),\r\n\t\t\t\ttags: state.tags.filter((tag, id) => id !== tagId),\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.ADD_TAG: {\r\n\t\t\tconst { name, color } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttags: [...state.tags, { name, color }],\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.EDIT_TAG: {\r\n\t\t\tconst { tagId, newName } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttags: reduceItem(state.tags, tagId, (tag) => ({\r\n\t\t\t\t\t...tag,\r\n\t\t\t\t\tname: newName,\r\n\t\t\t\t})),\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.EDIT_FOLDER: {\r\n\t\t\tconst { newHeadline, folderId } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfolders: reduceItem(state.folders, folderId, (folder) => ({\r\n\t\t\t\t\t...folder,\r\n\t\t\t\t\theadline: newHeadline,\r\n\t\t\t\t})),\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.SET_CURRENT_FOLDERS: {\r\n\t\t\tconst { from, folderId } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfolders: state.folders.map((folder) => {\r\n\t\t\t\t\tif (folder.id === from) return { ...folder, shown: false };\r\n\t\t\t\t\tif (folder.id === folderId) return { ...folder, shown: true };\r\n\t\t\t\t\treturn folder;\r\n\t\t\t\t}),\r\n\t\t\t\tcurrentFolders: state.currentFolders.map((id) => {\r\n\t\t\t\t\tif (id === from) return folderId;\r\n\t\t\t\t\treturn id;\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.SWAP_CURRENT_FOLDERS: {\r\n\t\t\tconst { from, to } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentFolders: state.currentFolders.map((id) => {\r\n\t\t\t\t\tif (id === from) return to;\r\n\t\t\t\t\tif (id === to) return from;\r\n\t\t\t\t\treturn id;\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n","export const TOGGLE_CHECKED = \"todo/TOGGLE_CHECKED\";\r\nexport const ADD_GOAL = \"todo/ADD_GOAL\";\r\nexport const DELETE_FOLDER = \"todo/DELETE_FOLDER\";\r\nexport const DELETE_DONE = \"todo/DELETE_DONE\";\r\nexport const ADD_FOLDER = \"todo/ADD_FOLDER\";\r\nexport const SWAP_TASKS = \"todo/SWAP_TASKS\";\r\nexport const UNDO_DELETE_TASKS = \"todo/UNDO_DELETE_TASKS\";\r\nexport const SET_GOAL = \"todo/SET_GOAL\";\r\nexport const DELETE_CURRENT_FOLDER = \"todo/DELETE_CURRENT_FOLDER\";\r\nexport const SET_NOTE = \"todo/SET_NOTE\";\r\nexport const DELETE_TASK = \"todo/DELETE_TASK\";\r\nexport const SET_TAG = \"todo/SET_TAG\";\r\nexport const DELETE_TAG = \"todo/DELETE_TAG\";\r\nexport const ADD_TAG = \"todo/ADD_TAG\";\r\nexport const EDIT_TAG = \"todo/EDIT_TAG\";\r\nexport const EDIT_FOLDER = \"todo/EDIT_FOLDER\";\r\nexport const SET_CURRENT_FOLDERS = \"todo/SET_CURRENT_FOLDERS\";\r\nexport const SWAP_CURRENT_FOLDERS = \"todo/SWAP_CURRENT_FOLDERS\";\r\n","import { DrawerTypeEnum } from \"./../../types/index_d\";\r\nimport { ActionType } from \"typesafe-actions\";\r\nimport * as actions from \"../actions/ui\";\r\nimport * as constants from \"./../constants/ui\";\r\n\r\nconst initialState = {\r\n\tdrawerMode: DrawerTypeEnum.Menu,\r\n\tisLight: true,\r\n\tdrawerOpened: false,\r\n\tpageTitle: \"To do list\",\r\n};\r\n\r\nexport type UiAction = ActionType<typeof actions>;\r\ntype StateType = typeof initialState;\r\n\r\nconst reducer = (state = initialState, action: UiAction): StateType => {\r\n\tswitch (action.type) {\r\n\t\tcase constants.SET_DRAWER_MODE: {\r\n\t\t\tconst { type } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdrawerMode: type,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.SET_IS_LIGHT: {\r\n\t\t\tconst { isLight } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLight,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.SET_DRAWER_OPENED: {\r\n\t\t\tconst { open } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdrawerOpened: open,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase constants.SET_PAGE_TITLE: {\r\n\t\t\tconst { newTitle } = action.payload;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpageTitle: newTitle,\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport todo from \"./reducers/todo\";\r\nimport ui from \"./reducers/ui\";\r\nimport { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n\ttodo: todo,\r\n\tui: ui,\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<AppStateType> = useSelector;\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // required for Redux extension\r\n\r\nlet store = createStore(\r\n\trootReducer,\r\n\tcomposeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport const isMobile = {\r\n\tAndroid: () => navigator.userAgent.match(/Android/i),\r\n\tBlackBerry: () => navigator.userAgent.match(/BlackBerry/i),\r\n\tiOS: () => navigator.userAgent.match(/iPhone|iPad|iPod/i),\r\n\tOpera: () => navigator.userAgent.match(/Opera Mini/i),\r\n\tWindows: () =>\r\n\t\tnavigator.userAgent.match(/IEMobile/i) ||\r\n\t\tnavigator.userAgent.match(/WPDesktop/i),\r\n\tany: () =>\r\n\t\tisMobile.Android() ||\r\n\t\tisMobile.BlackBerry() ||\r\n\t\tisMobile.iOS() ||\r\n\t\tisMobile.Opera() ||\r\n\t\tisMobile.Windows(),\r\n};\r\n\r\nexport const reduceItem = <T>(\r\n\tarray: ReadonlyArray<T>,\r\n\tindex: number,\r\n\treducer: (value: T) => T\r\n): T[] => [\r\n\t...array.slice(0, index),\r\n\treducer(array[index]),\r\n\t...array.slice(index + 1),\r\n];\r\n\r\nexport default store;\r\n","import { useCallback, Ref } from \"react\";\r\n\r\nexport const combineStyles = (...styles: Array<string | undefined>) => {\r\n\treturn styles.reduce((style, cur) => (cur ? style + \" \" + cur : style));\r\n};\r\n\r\nexport const random = (min: number, max: number) => {\r\n\treturn Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nexport const randomColor = () => {\r\n\tlet letters = \"0123456789ABCDEF\";\r\n\tlet color = \"#\";\r\n\tfor (let i = 0; i < 6; ++i) color += letters[Math.floor(Math.random() * 16)];\r\n\treturn color;\r\n};\r\n\r\nexport const getIntSecondPart = (str: string, symbol: string): number => {\r\n\treturn parseInt(str.split(symbol)[1]);\r\n};\r\n\r\nexport const useCombinedRefs = <T extends any>(\r\n\t...refs: ReadonlyArray<Ref<T>>\r\n): Ref<T> =>\r\n\tuseCallback(\r\n\t\t(element: T) =>\r\n\t\t\trefs.forEach((ref) => {\r\n\t\t\t\tif (!ref) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// Ref can have two types - a function or an object. We treat each case.\r\n\t\t\t\tif (typeof ref === \"function\") {\r\n\t\t\t\t\treturn ref(element);\r\n\t\t\t\t}\r\n\t\t\t\t// As per https://github.com/facebook/react/issues/13029\r\n\t\t\t\t// it should be fine to set current this way.\r\n\t\t\t\t(ref as any).current = element;\r\n\t\t\t}),\r\n\t\t[refs]\r\n\t);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n\tTheme,\r\n\tmakeStyles,\r\n\tStyleRules,\r\n\tTypography,\r\n\tIconButton,\r\n\tList,\r\n\tListItem,\r\n\tListItemText,\r\n\tCollapse,\r\n\tListItemSecondaryAction,\r\n\tListItemIcon,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/EditRounded\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { combineStyles } from \"../../utils/helpers\";\r\nimport MoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport LessIcon from \"@material-ui/icons/ChevronRight\";\r\nimport { useTypedSelector } from \"../../redux/reduxStore\";\r\n\r\ntype PropsType = {\r\n\topenAddTag: () => void;\r\n\topenEditTag: () => void;\r\n\topenSetFolder: () => void;\r\n\topenEditFolder: () => void;\r\n\tsetEditTagName: (name: string) => void;\r\n\tsetEditTagId: (id: number) => void;\r\n\tsetHeadline: (headline: string) => void;\r\n\tsetCurrentFolderId: (id: number) => void;\r\n};\r\n\r\nconst useStyles = makeStyles(\r\n\t(theme: Theme): StyleRules<string> => ({\r\n\t\troot: {\r\n\t\t\tpadding: 0,\r\n\t\t},\r\n\t\tlabelText: {\r\n\t\t\tfontWeight: \"inherit\",\r\n\t\t\tflexGrow: 1,\r\n\t\t},\r\n\t\tlabelRoot: {\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\talignItems: \"left\",\r\n\t\t},\r\n\t\ticonEditButton: {\r\n\t\t\t\"&:hover\": {\r\n\t\t\t\tcolor: theme.palette.primary.main,\r\n\t\t\t},\r\n\t\t\tpadding: 0,\r\n\t\t},\r\n\t\ticonAddButton: {\r\n\t\t\t\"&:hover\": {\r\n\t\t\t\tcolor: theme.palette.primary.light,\r\n\t\t\t},\r\n\t\t\tpadding: 0,\r\n\t\t},\r\n\t\tlistItem: {\r\n\t\t\theight: \"50px\",\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tmaxWidth: \"300px\",\r\n\t\t\toverflow: \"hidden\",\r\n\t\t},\r\n\t\tbottomListItem: {\r\n\t\t\tpaddingLeft: \"30px\",\r\n\t\t},\r\n\t\texpandIcon: {\r\n\t\t\tminWidth: 0,\r\n\t\t\tmarginRight: \"5px\",\r\n\t\t\tmarginLeft: \"5px\",\r\n\t\t},\r\n\t})\r\n);\r\n\r\nconst FoldersTreeView = ({\r\n\topenAddTag,\r\n\topenEditTag,\r\n\topenSetFolder,\r\n\topenEditFolder,\r\n\tsetEditTagName,\r\n\tsetEditTagId,\r\n\tsetHeadline,\r\n\tsetCurrentFolderId,\r\n}: PropsType) => {\r\n\tconst classes = useStyles();\r\n\tconst [foldersOpened, setFoldersOpened] = useState(false);\r\n\tconst [tagsOpened, setTagsOpened] = useState(false);\r\n\r\n\tconst tags = useTypedSelector((state) => state.todo.tags);\r\n\tconst folders = useTypedSelector((state) => state.todo.folders);\r\n\r\n\tconst toggleFoldersOpen = () => {\r\n\t\tsetFoldersOpened(!foldersOpened);\r\n\t};\r\n\tconst toggleTagsOpened = () => {\r\n\t\tsetTagsOpened(!tagsOpened);\r\n\t};\r\n\treturn (\r\n\t\t<List className={classes.root}>\r\n\t\t\t<ListItem button onClick={toggleFoldersOpen} className={classes.listItem}>\r\n\t\t\t\t<ListItemIcon className={classes.expandIcon}>\r\n\t\t\t\t\t{foldersOpened ? <MoreIcon /> : <LessIcon />}\r\n\t\t\t\t</ListItemIcon>\r\n\t\t\t\t<ListItemText>\r\n\t\t\t\t\t<div className={classes.labelRoot}>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant=\"h5\"\r\n\t\t\t\t\t\t\tclassName={classes.labelText}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\talignSelf: \"center\",\r\n\t\t\t\t\t\t\t\tpointerEvents: \"none\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tFolders\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ListItemText>\r\n\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t\t{foldersOpened ? (\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tclassName={classes.iconAddButton}\r\n\t\t\t\t\t\t\tonClick={openSetFolder}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AddIcon\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontSize: \"1em\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<></>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t</ListItem>\r\n\t\t\t<Collapse in={foldersOpened}>\r\n\t\t\t\t{folders.map((folder) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={\"tree-item-node-\" + folder.id}\r\n\t\t\t\t\t\t\tclassName={combineStyles(\r\n\t\t\t\t\t\t\t\tclasses.bottomListItem,\r\n\t\t\t\t\t\t\t\tclasses.listItem\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t\t<div className={classes.labelRoot}>\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.labelText}>\r\n\t\t\t\t\t\t\t\t\t\t{folder.headline}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tclassName={classes.iconEditButton}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetHeadline(folder.headline);\r\n\t\t\t\t\t\t\t\t\t\tsetCurrentFolderId(folder.id);\r\n\t\t\t\t\t\t\t\t\t\topenEditFolder();\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<EditIcon style={{ fontSize: \"0.8em\" }} />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</Collapse>\r\n\t\t\t<ListItem button onClick={toggleTagsOpened} className={classes.listItem}>\r\n\t\t\t\t<ListItemIcon className={classes.expandIcon}>\r\n\t\t\t\t\t{tagsOpened ? <MoreIcon /> : <LessIcon />}\r\n\t\t\t\t</ListItemIcon>\r\n\t\t\t\t<ListItemText>\r\n\t\t\t\t\t<div className={classes.labelRoot}>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant=\"h5\"\r\n\t\t\t\t\t\t\tclassName={classes.labelText}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\talignSelf: \"center\",\r\n\t\t\t\t\t\t\t\tpointerEvents: \"none\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tTags\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ListItemText>\r\n\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t\t{tagsOpened ? (\r\n\t\t\t\t\t\t<IconButton className={classes.iconAddButton} onClick={openAddTag}>\r\n\t\t\t\t\t\t\t<AddIcon style={{ fontSize: \"1em\" }} />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<></>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t</ListItem>\r\n\t\t\t<Collapse in={tagsOpened}>\r\n\t\t\t\t{tags.map((tag, id) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={\"tree-item-node-\" + tag.name}\r\n\t\t\t\t\t\t\tclassName={combineStyles(\r\n\t\t\t\t\t\t\t\tclasses.bottomListItem,\r\n\t\t\t\t\t\t\t\tclasses.listItem\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t\t<div className={classes.labelRoot}>\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.labelText}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: tag.color }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{\"#\" + tag.name}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\topenEditTag();\r\n\t\t\t\t\t\t\t\t\t\tsetEditTagId(id);\r\n\t\t\t\t\t\t\t\t\t\tsetEditTagName(tag.name);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.iconEditButton}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<EditIcon style={{ fontSize: \"0.8em\" }} />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</Collapse>\r\n\t\t</List>\r\n\t);\r\n};\r\n\r\nexport default FoldersTreeView;\r\n","import React from \"react\";\r\nimport {\r\n\tStyleRules,\r\n\tTheme,\r\n\tmakeStyles,\r\n\tButton,\r\n\tButtonProps,\r\n} from \"@material-ui/core\";\r\nimport { combineStyles } from \"../utils/helpers\";\r\n\r\nconst useStyles = makeStyles(\r\n\t(theme: Theme): StyleRules<string> => ({\r\n\t\tbold: {\r\n\t\t\tfontWeight: \"bold\",\r\n\t\t\tcolor: \"white\",\r\n\t\t},\r\n\t\tcancel: {\r\n\t\t\tcolor: theme.palette.action.active,\r\n\t\t},\r\n\t})\r\n);\r\n\r\nexport const CancelDialogButton = (props: ButtonProps) => {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<Button\r\n\t\t\t{...props}\r\n\t\t\tclassName={combineStyles(classes.cancel, classes.bold, props.className)}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport const DeleteDialogButton = (props: ButtonProps) => {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<Button\r\n\t\t\t{...props}\r\n\t\t\tclassName={combineStyles(classes.delete, classes.bold, props.className)}\r\n\t\t\tvariant=\"contained\"\r\n\t\t\tcolor=\"secondary\"\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport const ApplyDialogButton = (props: ButtonProps) => {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<Button\r\n\t\t\t{...props}\r\n\t\t\tclassName={classes.bold}\r\n\t\t\tvariant=\"contained\"\r\n\t\t\tcolor=\"primary\"\r\n\t\t/>\r\n\t);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n\tDialog,\r\n\tDialogTitle,\r\n\tDialogContent,\r\n\tInput,\r\n\tDialogActions,\r\n\tCheckbox,\r\n\tTheme,\r\n\tStyleRules,\r\n\tmakeStyles,\r\n\tuseTheme,\r\n} from \"@material-ui/core\";\r\nimport { ColorResult, HuePicker } from \"react-color\";\r\nimport { CancelDialogButton, ApplyDialogButton } from \"../../../assets/Buttons\";\r\nimport { combineStyles } from \"../../../utils/helpers\";\r\n\r\nconst useStyles = makeStyles(\r\n\t(theme: Theme): StyleRules<string> => ({\r\n\t\titem: {\r\n\t\t\twidth: \"100%\",\r\n\t\t\theight: \"100%\",\r\n\t\t\tposition: \"relative\",\r\n\t\t\tborderBottom: \"1px solid \" + theme.palette.action.selected,\r\n\t\t\tborderTop: \"1px solid \" + theme.palette.action.selected,\r\n\t\t\tboxShadow: theme.shadows[3],\r\n\t\t\tcursor: \"default\",\r\n\t\t\tzIndex: 0,\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\tmarginBottom: \"20px\",\r\n\t\t\tpaddingRight: \"15px\",\r\n\t\t\tpaddingLeft: \"15px\",\r\n\t\t},\r\n\t\tchecked: {\r\n\t\t\ttextDecoration: \"line-through\",\r\n\t\t},\r\n\t\tnotSelectable: {\r\n\t\t\tuserSelect: \"none\",\r\n\t\t\talignSelf: \"center\",\r\n\t\t\tflexGrow: 1,\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\twidth: \"400px\",\r\n\t\t},\r\n\t\tpicker: {\r\n\t\t\twidth: \"400px\",\r\n\t\t},\r\n\t})\r\n);\r\n\r\ntype PropsType = {\r\n\topen: boolean;\r\n\tsetOpen: (open: boolean) => void;\r\n\taddTag: (name: string, color: string) => void;\r\n};\r\n\r\nconst AddTagDialog = ({ open, setOpen, addTag }: PropsType) => {\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\tconst [checked, setChecked] = useState(false);\r\n\tconst [color, setColor] = useState(theme.palette.primary.main);\r\n\tconst [tagName, setTagName] = useState(\"New tag\");\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst toggleCheckbox = () => {\r\n\t\tsetChecked(!checked);\r\n\t};\r\n\tconst handleChangeComplete = (\r\n\t\tnewColor: ColorResult,\r\n\t\tevent: React.ChangeEvent<HTMLInputElement>\r\n\t) => {\r\n\t\tconsole.log(newColor, event);\r\n\t\tsetColor(newColor.hex);\r\n\t};\r\n\tconst handleChange = (newColor: ColorResult) => {\r\n\t\tsetColor(newColor.hex);\r\n\t};\r\n\tconst handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetTagName(e.target.value);\r\n\t};\r\n\tconst handleAddTag = () => {\r\n\t\taddTag(tagName, color);\r\n\t\tsetOpen(false);\r\n\t};\r\n\treturn (\r\n\t\t<Dialog open={open} onClose={handleClose}>\r\n\t\t\t<DialogTitle className={classes.title}>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tvalue={tagName}\r\n\t\t\t\t\tstyle={{ fontSize: \"1.6em\" }}\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t/>\r\n\t\t\t</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={classes.item}\r\n\t\t\t\t\tstyle={{ borderLeft: \"4px solid \" + color }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName={combineStyles(\r\n\t\t\t\t\t\t\tchecked ? classes.checked : \"\",\r\n\t\t\t\t\t\t\tclasses.notSelectable\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tExample text\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<div className={classes.checkbox}>\r\n\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\tedge=\"end\"\r\n\t\t\t\t\t\t\tchecked={checked}\r\n\t\t\t\t\t\t\tonChange={toggleCheckbox}\r\n\t\t\t\t\t\t\tvalue={0}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<HuePicker\r\n\t\t\t\t\tclassName={classes.picker}\r\n\t\t\t\t\tcolor={color}\r\n\t\t\t\t\tonChangeComplete={handleChangeComplete}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<CancelDialogButton onClick={handleClose}>Cancel</CancelDialogButton>\r\n\t\t\t\t<ApplyDialogButton onClick={handleAddTag}>Add</ApplyDialogButton>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n\r\nexport default AddTagDialog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Dialog, DialogTitle, Input, DialogActions } from \"@material-ui/core\";\r\nimport { ApplyDialogButton, CancelDialogButton } from \"../../../assets/Buttons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { editTagAction } from \"../../../redux/actions/todo\";\r\n\r\ntype PropsType = {\r\n\topen: boolean;\r\n\tsetOpen: (open: boolean) => void;\r\n\ttagName: string;\r\n\ttagId: number;\r\n};\r\n\r\nconst EditTagDialog = ({ open, setOpen, tagId, tagName }: PropsType) => {\r\n\tconst [newName, setNewName] = useState(\"\");\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst editTag = (tagId: number, newName: string) =>\r\n\t\tdispatch(editTagAction(tagId, newName));\r\n\r\n\tuseEffect(() => {\r\n\t\tsetNewName(tagName);\r\n\t}, [tagName]);\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst handleEdit = () => {\r\n\t\teditTag(tagId, newName);\r\n\t\thandleClose();\r\n\t};\r\n\tconst handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetNewName(e.target.value);\r\n\t};\r\n\treturn (\r\n\t\t<Dialog open={open} onClose={handleClose}>\r\n\t\t\t<DialogTitle>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tvalue={newName}\r\n\t\t\t\t\tstyle={{ fontSize: \"1.6em\" }}\r\n\t\t\t\t/>\r\n\t\t\t</DialogTitle>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<CancelDialogButton onClick={handleClose}>Cancel</CancelDialogButton>\r\n\t\t\t\t<ApplyDialogButton onClick={handleEdit}>Save</ApplyDialogButton>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n\r\nexport default EditTagDialog;\r\n","import { action } from \"typesafe-actions\";\r\nimport * as constants from \"./../constants/todo\";\r\n\r\nexport const toggleCheckedAction = (id: number, folderId: number) =>\r\n\taction(constants.TOGGLE_CHECKED, { id, folderId });\r\n\r\nexport const addGoalAction = (text: string, folderId: number) =>\r\n\taction(constants.ADD_GOAL, { text, folderId });\r\n\r\nexport const deleteFolderAction = (id: number) =>\r\n\taction(constants.DELETE_FOLDER, { id });\r\n\r\nexport const deleteDoneAction = (folderId: number) =>\r\n\taction(constants.DELETE_DONE, { folderId });\r\n\r\nexport const addFolderAction = (headline: string) =>\r\n\taction(constants.ADD_FOLDER, { headline });\r\n\r\nexport const swapTasksAction = (\r\n\tfrom: number,\r\n\tto: number,\r\n\tfromFolderId: number,\r\n\ttoFolderId: number\r\n) => action(constants.SWAP_TASKS, { from, to, fromFolderId, toFolderId });\r\n\r\nexport const setGoalAction = (id: number, newGoal: string, folderId: number) =>\r\n\taction(constants.SET_GOAL, { id, newGoal, folderId });\r\n\r\nexport const deleteCurrentFolderAction = (folderId: number) =>\r\n\taction(constants.DELETE_CURRENT_FOLDER, { folderId });\r\n\r\nexport const setNoteAction = (id: number, newNote: string, folderId: number) =>\r\n\taction(constants.SET_NOTE, { id, newNote, folderId });\r\n\r\nexport const deleteTaskAction = (taskId: number, folderId: number) =>\r\n\taction(constants.DELETE_TASK, { taskId, folderId });\r\n\r\nexport const setTagAction = (\r\n\ttaskId: number,\r\n\ttagId: number | undefined,\r\n\tfolderId: number\r\n) => action(constants.SET_TAG, { taskId, tagId, folderId });\r\n\r\nexport const deleteTagAction = (tagId: number) =>\r\n\taction(constants.DELETE_TAG, { tagId });\r\n\r\nexport const addTagAction = (name: string, color: string) =>\r\n\taction(constants.ADD_TAG, { name, color });\r\n\r\nexport const editTagAction = (tagId: number, newName: string) =>\r\n\taction(constants.EDIT_TAG, { tagId, newName });\r\n\r\nexport const editFolderAction = (newHeadline: string, folderId: number) =>\r\n\taction(constants.EDIT_FOLDER, { newHeadline, folderId });\r\n\r\nexport const setCurrentFoldersAction = (from: number, folderId: number) =>\r\n\taction(constants.SET_CURRENT_FOLDERS, { from, folderId });\r\n\r\nexport const swapCurrentFoldersAction = (from: number, to: number) =>\r\n\taction(constants.SWAP_CURRENT_FOLDERS, { from, to });\r\n","import React, { useState } from \"react\";\r\nimport {\r\n\tDialog,\r\n\tDialogTitle,\r\n\tInput,\r\n\tDialogContent,\r\n\tDialogActions,\r\n} from \"@material-ui/core\";\r\nimport { CancelDialogButton, ApplyDialogButton } from \"../../../assets/Buttons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addFolderAction } from \"../../../redux/actions/todo\";\r\n\r\ntype PropsType = {\r\n\topen: boolean;\r\n\tsetOpen: (open: boolean) => void;\r\n};\r\n\r\nconst AddFolderDialog = ({ open, setOpen }: PropsType) => {\r\n\tconst [headline, setHeadline] = useState(\"\");\r\n\tconst dispatch = useDispatch();\r\n\tconst addFolder = (folderName: string) =>\r\n\t\tdispatch(addFolderAction(folderName));\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (e.target.value.length <= 15) setHeadline(e.target.value);\r\n\t};\r\n\tconst handleAddFolder = () => {\r\n\t\taddFolder(headline);\r\n\t\tsetHeadline(\"\");\r\n\t\thandleClose();\r\n\t};\r\n\treturn (\r\n\t\t<Dialog open={open} onClose={handleClose}>\r\n\t\t\t<DialogTitle>\r\n\t\t\t\t<span style={{ fontSize: \"1.6em\" }}>Add folder</span>\r\n\t\t\t</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tstyle={{ fontSize: \"1.5em\" }}\r\n\t\t\t\t\tplaceholder=\"Folder name\"\r\n\t\t\t\t\tvalue={headline}\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<CancelDialogButton onClick={handleClose}>Cancel</CancelDialogButton>\r\n\t\t\t\t<ApplyDialogButton onClick={handleAddFolder}>Add</ApplyDialogButton>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n\r\nexport default AddFolderDialog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Dialog, DialogTitle, DialogActions, Input } from \"@material-ui/core\";\r\nimport { CancelDialogButton, ApplyDialogButton } from \"../../../assets/Buttons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { editFolderAction } from \"../../../redux/actions/todo\";\r\n\r\ntype PropsType = {\r\n\theadline: string;\r\n\topen: boolean;\r\n\tsetOpen: (open: boolean) => void;\r\n\tfolderId: number;\r\n};\r\n\r\nconst EditFolderDialog = ({ open, setOpen, headline, folderId }: PropsType) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [newHeadline, setNewHeadline] = useState(headline);\r\n\tuseEffect(() => {\r\n\t\tsetNewHeadline(headline);\r\n\t}, [headline]);\r\n\tconst editFolder = (newName: string, folderIdEdit: number) =>\r\n\t\tdispatch(editFolderAction(newName, folderIdEdit));\r\n\tconst handleClose = () => {\r\n\t\tsetNewHeadline(headline);\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (e.target.value.length <= 15) setNewHeadline(e.target.value);\r\n\t};\r\n\tconst handleSave = () => {\r\n\t\teditFolder(newHeadline, folderId);\r\n\t\thandleClose();\r\n\t};\r\n\treturn (\r\n\t\t<Dialog open={open} onClose={handleClose}>\r\n\t\t\t<DialogTitle>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tstyle={{ fontSize: \"1.6em\" }}\r\n\t\t\t\t\tvalue={newHeadline}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\t\t\t</DialogTitle>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<CancelDialogButton onClick={handleClose}>Cancel</CancelDialogButton>\r\n\t\t\t\t<ApplyDialogButton onClick={handleSave}>Apply</ApplyDialogButton>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n\r\nexport default EditFolderDialog;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n\tTheme,\r\n\tmakeStyles,\r\n\tStyleRules,\r\n\tDrawer,\r\n\tIconButton,\r\n} from \"@material-ui/core\";\r\nimport { isMobile, useTypedSelector } from \"../../redux/reduxStore\";\r\nimport FoldersTreeView from \"./FoldersTreeView\";\r\nimport AddTagDialog from \"./Dialogs/AddTagDialog\";\r\nimport EditTagDialog from \"./Dialogs/EditTagDialog\";\r\nimport AddFolderDialog from \"./Dialogs/AddFolderDialog\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTagAction } from \"../../redux/actions/todo\";\r\nimport { setIsLightAction } from \"../../redux/actions/ui\";\r\nimport SunIcon from \"@material-ui/icons/Brightness7\";\r\nimport MoonIcon from \"@material-ui/icons/Brightness4\";\r\nimport EditFolderDialog from \"./Dialogs/EditFolderDialog\";\r\n\r\nconst useStyles = makeStyles(\r\n\t(theme: Theme): StyleRules<string> => ({\r\n\t\tdrawer: {\r\n\t\t\tflexShrink: 0,\r\n\t\t},\r\n\t\tdrawerPaper: {\r\n\t\t\tboxShadow: theme.shadows[3],\r\n\t\t},\r\n\t\tdrawerHeader: {\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\talignItems: \"center\",\r\n\t\t\t...theme.mixins.toolbar,\r\n\t\t\tjustifyContent: \"flex-end\",\r\n\t\t},\r\n\t\tfullHeight: {\r\n\t\t\theight: \"100%\",\r\n\t\t},\r\n\t\tswitcher: {\r\n\t\t\theight: \"100%\",\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\talignItems: \"flex-end\",\r\n\t\t\tjustifyContent: \"flex-end\",\r\n\t\t},\r\n\t\tmoon: {\r\n\t\t\t\"&:hover\": {\r\n\t\t\t\tcolor: theme.palette.grey[800],\r\n\t\t\t},\r\n\t\t},\r\n\t\tsun: {\r\n\t\t\t\"&:hover\": {\r\n\t\t\t\tcolor: \"#fff59d\",\r\n\t\t\t},\r\n\t\t},\r\n\t})\r\n);\r\n\r\ntype PropsType = {\r\n\topen: boolean;\r\n};\r\n\r\nconst HeaderDrawer = ({ open }: PropsType) => {\r\n\tconst classes = useStyles();\r\n\tconst dispatch = useDispatch();\r\n\tconst [addTagOpened, setAddTagOpened] = useState(false);\r\n\tconst [editTagOpened, setEditTagOpened] = useState(false);\r\n\tconst [folderSetOpened, setFolderSetOpened] = useState(false);\r\n\tconst [editFolderOpened, setEditFolderOpened] = useState(false);\r\n\tconst [headline, setHeadline] = useState(\"\");\r\n\tconst [editTagId, setEditTagId] = useState(0);\r\n\tconst [currentFolderId, setCurrentFolderId] = useState(0);\r\n\tconst [editTagName, setEditTagName] = useState(\"\");\r\n\r\n\tconst isLight = useTypedSelector((state) => state.ui.isLight);\r\n\r\n\tconst addTag = (name: string, color: string) =>\r\n\t\tdispatch(addTagAction(name, color));\r\n\tconst setIsLight = (light: boolean) => dispatch(setIsLightAction(light));\r\n\r\n\tconst openAddTag = () => {\r\n\t\tsetAddTagOpened(true);\r\n\t};\r\n\tconst openEditTag = () => {\r\n\t\tsetEditTagOpened(true);\r\n\t};\r\n\tconst openSetFolder = () => {\r\n\t\tsetFolderSetOpened(true);\r\n\t};\r\n\tconst openEditFolder = () => {\r\n\t\tsetEditFolderOpened(true);\r\n\t};\r\n\r\n\tconst toggleTheme = () => {\r\n\t\tsetIsLight(!isLight);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\tclassName={classes.drawer}\r\n\t\t\tstyle={{\r\n\t\t\t\twidth: isMobile.any() ? \"50vw\" : \"20vw\",\r\n\t\t\t}}\r\n\t\t\tvariant=\"persistent\"\r\n\t\t\tanchor=\"left\"\r\n\t\t\topen={open}\r\n\t\t\tclasses={{\r\n\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div\r\n\t\t\t\tclassName={classes.drawerHeader}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: isMobile.any() ? \"50vw\" : \"20vw\",\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<FoldersTreeView\r\n\t\t\t\topenAddTag={openAddTag}\r\n\t\t\t\topenEditTag={openEditTag}\r\n\t\t\t\topenSetFolder={openSetFolder}\r\n\t\t\t\tsetEditTagName={setEditTagName}\r\n\t\t\t\tsetEditTagId={setEditTagId}\r\n\t\t\t\topenEditFolder={openEditFolder}\r\n\t\t\t\tsetHeadline={setHeadline}\r\n\t\t\t\tsetCurrentFolderId={setCurrentFolderId}\r\n\t\t\t/>\r\n\t\t\t<div className={classes.fullHeight}>\r\n\t\t\t\t<div className={classes.switcher}>\r\n\t\t\t\t\t<IconButton onClick={toggleTheme}>\r\n\t\t\t\t\t\t{isLight ? (\r\n\t\t\t\t\t\t\t<MoonIcon className={classes.moon} />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<SunIcon className={classes.sun} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<AddTagDialog\r\n\t\t\t\tsetOpen={setAddTagOpened}\r\n\t\t\t\topen={addTagOpened}\r\n\t\t\t\taddTag={addTag}\r\n\t\t\t/>\r\n\t\t\t<EditTagDialog\r\n\t\t\t\tsetOpen={setEditTagOpened}\r\n\t\t\t\topen={editTagOpened}\r\n\t\t\t\ttagId={editTagId}\r\n\t\t\t\ttagName={editTagName}\r\n\t\t\t/>\r\n\t\t\t<AddFolderDialog open={folderSetOpened} setOpen={setFolderSetOpened} />\r\n\t\t\t<EditFolderDialog\r\n\t\t\t\theadline={headline}\r\n\t\t\t\topen={editFolderOpened}\r\n\t\t\t\tsetOpen={setEditFolderOpened}\r\n\t\t\t\tfolderId={currentFolderId}\r\n\t\t\t/>\r\n\t\t</Drawer>\r\n\t);\r\n};\r\n\r\nexport default HeaderDrawer;\r\n","import React from \"react\";\r\nimport { makeStyles, Theme, StyleRules } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { isMobile } from \"../../redux/reduxStore\";\r\nimport HeaderDrawer from \"./HeaderDrawer\";\r\n\r\nconst useStyles = makeStyles(\r\n\t(theme: Theme): StyleRules<string> => ({\r\n\t\troot: {\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\theight: \"100vh\",\r\n\t\t},\r\n\t\tappBar: {\r\n\t\t\tzIndex: theme.zIndex.drawer + 1,\r\n\t\t\ttransition: theme.transitions.create([\"margin\", \"width\"], {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t\t\t}),\r\n\t\t\tbackground: \"#3F51B5\",\r\n\t\t},\r\n\t\tmenuButton: {\r\n\t\t\tmarginRight: theme.spacing(2),\r\n\t\t\tcolor: \"white\",\r\n\t\t},\r\n\t\tdrawerHeader: {\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\talignItems: \"center\",\r\n\t\t\t...theme.mixins.toolbar,\r\n\t\t\tjustifyContent: \"flex-end\",\r\n\t\t},\r\n\t\tcontent: {\r\n\t\t\tflexGrow: 1,\r\n\t\t\ttransition: theme.transitions.create(\"margin\", {\r\n\t\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t\t\t}),\r\n\t\t},\r\n\t\ttitle: { flexGrow: 1, color: \"white\" },\r\n\t\ttoolbar: {\r\n\t\t\tpaddingRight: theme.spacing(1.5),\r\n\t\t\tpaddingLeft: theme.spacing(3),\r\n\t\t},\r\n\t\tmoon: {\r\n\t\t\t\"&:hover\": {\r\n\t\t\t\tcolor: theme.palette.grey[800],\r\n\t\t\t},\r\n\t\t},\r\n\t\tsun: {\r\n\t\t\t\"&:hover\": {\r\n\t\t\t\tcolor: \"#fff59d\",\r\n\t\t\t},\r\n\t\t},\r\n\t})\r\n);\r\n\r\ntype PropsType = {\r\n\topen: boolean;\r\n\tsetOpen: (open: boolean) => void;\r\n\tchildren: React.ReactChild;\r\n};\r\n\r\nconst Header = ({ open, setOpen, children }: PropsType) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst toggleDrawerOpened = () => {\r\n\t\tsetOpen(!open);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\r\n\t\t\t\t<Toolbar className={classes.toolbar}>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\taria-label=\"open drawer\"\r\n\t\t\t\t\t\tonClick={toggleDrawerOpened}\r\n\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\tclassName={classes.menuButton}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<Typography variant=\"h6\" noWrap className={classes.title}>\r\n\t\t\t\t\t\tTo do list\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t<HeaderDrawer open={open} />\r\n\t\t\t<main\r\n\t\t\t\tclassName={classes.content}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginLeft: isMobile.any() ? \"-50vw\" : \"-20vw\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className={classes.drawerHeader} />\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {\r\n\tDraggable,\r\n\tDraggableProvided,\r\n\tDraggableStateSnapshot,\r\n\tNotDraggingStyle,\r\n\tDraggingStyle,\r\n} from \"react-beautiful-dnd\";\r\n\r\ntype DraggableItemPropsType = {\r\n\tid: number;\r\n\tclassName?: string;\r\n\tchildren: React.ReactChild;\r\n\tadding: string;\r\n\tgetItemStyle?: (\r\n\t\tisDragging: boolean,\r\n\t\tdraggableProps: DraggingStyle | NotDraggingStyle | undefined\r\n\t) => object;\r\n};\r\n\r\nconst DraggableItem = ({\r\n\tadding,\r\n\tid,\r\n\tclassName,\r\n\tchildren,\r\n\tgetItemStyle,\r\n}: DraggableItemPropsType) => {\r\n\treturn (\r\n\t\t<Draggable draggableId={\"item-\" + adding + id} index={id}>\r\n\t\t\t{(provided: DraggableProvided, snapshot: DraggableStateSnapshot) => (\r\n\t\t\t\t<div\r\n\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\t{...provided.dragHandleProps}\r\n\t\t\t\t\tstyle={\r\n\t\t\t\t\t\tgetItemStyle\r\n\t\t\t\t\t\t\t? getItemStyle(snapshot.isDragging, provided.draggableProps.style)\r\n\t\t\t\t\t\t\t: undefined\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclassName={className}\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Draggable>\r\n\t);\r\n};\r\n\r\nexport default DraggableItem;\r\n","import React from \"react\";\r\nimport { Droppable, DroppableProvided } from \"react-beautiful-dnd\";\r\n\r\ntype DroppableItemPropsType = {\r\n\tclassName?: string;\r\n\thorizontal?: boolean;\r\n\tdroppableId: string;\r\n\tchildren: React.ReactChild;\r\n};\r\n\r\nconst DroppableItem = ({\r\n\tclassName,\r\n\thorizontal,\r\n\tdroppableId,\r\n\tchildren,\r\n}: DroppableItemPropsType) => {\r\n\treturn (\r\n\t\t<Droppable\r\n\t\t\tdroppableId={droppableId}\r\n\t\t\tdirection={horizontal ? \"horizontal\" : \"vertical\"}\r\n\t\t>\r\n\t\t\t{(provided: DroppableProvided) => (\r\n\t\t\t\t<div\r\n\t\t\t\t\t{...provided.droppableProps}\r\n\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\tclassName={className}\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Droppable>\r\n\t);\r\n};\r\n\r\nexport default DroppableItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n\tDialog,\r\n\tDialogActions,\r\n\tmakeStyles,\r\n\tStyleRules,\r\n\tTheme,\r\n\tDialogTitle,\r\n\tTypography,\r\n\tDialogContent,\r\n\tuseTheme,\r\n\tTextField,\r\n} from \"@material-ui/core\";\r\nimport { GoalType, TagType, TaskDetailsFormType } from \"../../../types/index_d\";\r\nimport {\r\n\tApplyDialogButton,\r\n\tDeleteDialogButton,\r\n\tCancelDialogButton,\r\n} from \"../../../assets/Buttons\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst useStyles = makeStyles(\r\n\t(theme: Theme): StyleRules<string> => ({\r\n\t\tbuttons: {\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\twidth: \"100%\",\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\twidth: \"50%\",\r\n\t\t},\r\n\t\tnotes: {\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\tflexDirection: \"column\",\r\n\t\t},\r\n\t\ttaskInput: {\r\n\t\t\tfontSize: \"2em\",\r\n\t\t},\r\n\t\tinfoFontSize: {\r\n\t\t\tfontSize: \"1.3em\",\r\n\t\t},\r\n\t\tnotesLabel: {\r\n\t\t\tmarginTop: theme.spacing(1),\r\n\t\t\tmarginBottom: \"5px\",\r\n\t\t},\r\n\t\tcancel: {\r\n\t\t\tflexGrow: 1,\r\n\t\t},\r\n\t\tdialogTitle: {\r\n\t\t\tpaddingBottom: theme.spacing(1),\r\n\t\t},\r\n\t\tchip: {\r\n\t\t\tfontSize: \"1em\",\r\n\t\t\tfontFamily: \"sans-serif\",\r\n\t\t\tfontWeight: \"bolder\",\r\n\t\t\tborderStyle: \"solid\",\r\n\t\t\tletterSpacing: \"0.05em\",\r\n\t\t\tmarginRight: \"5px\",\r\n\t\t\tmarginBottom: \"5px\",\r\n\t\t\tcolor: theme.palette.text.secondary,\r\n\t\t\tboxSizing: \"border-box\",\r\n\t\t\ttransition: \"all .5s\",\r\n\t\t},\r\n\t})\r\n);\r\n\r\ntype PropsType = {\r\n\topen: boolean;\r\n\tsetOpen: (isOpen: boolean) => void;\r\n\tgoal: GoalType;\r\n\tsetGoal: (id: number, text: string, folderId: number) => void;\r\n\tsetNote: (id: number, newNote: string, folderId: number) => void;\r\n\tdeleteTask: (id: number, folderId: number) => void;\r\n\tsetTag: (taskId: number, tagId: number | undefined, folderId: number) => void;\r\n\ttags: ReadonlyArray<TagType>;\r\n\tdeleteTag: (tagId: number) => void;\r\n\tfolderId: number;\r\n};\r\n\r\nconst TaskDetails = ({\r\n\topen,\r\n\tgoal,\r\n\ttags,\r\n\tfolderId,\r\n\tsetOpen,\r\n\tsetGoal,\r\n\tsetNote,\r\n\tdeleteTask,\r\n\tsetTag,\r\n\tdeleteTag,\r\n}: PropsType) => {\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\tconst [newTagId, setNewTagId] = useState<number | undefined>(goal.tag);\r\n\tconst [deletedTags, setDeletedTags] = useState<boolean[]>([]);\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"useEffect\");\r\n\t\tsetDeletedTags(tags.map(() => false));\r\n\t\treturn () => {\r\n\t\t\tsetDeletedTags(tags.map(() => false));\r\n\t\t};\r\n\t}, [tags]);\r\n\tconst { register, handleSubmit, errors } = useForm<TaskDetailsFormType>();\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t\tsetNewTagId(undefined);\r\n\t\tsetDeletedTags(tags.map(() => false));\r\n\t};\r\n\tconst deleteCurrentTask = () => {\r\n\t\tdeleteTask(goal.id, folderId);\r\n\t\thandleClose();\r\n\t};\r\n\tconst onSubmit = (data: TaskDetailsFormType) => {\r\n\t\tsetOpen(false);\r\n\t\tsetGoal(goal.id, data.goalText, folderId);\r\n\t\tsetNote(goal.id, data.noteText, folderId);\r\n\t\tif (newTagId !== undefined) setTag(goal.id, newTagId, folderId);\r\n\t\tdeletedTags.map((tagDeleted, deletedTagId) => {\r\n\t\t\tif (tagDeleted) deleteTag(deletedTagId);\r\n\t\t\treturn false;\r\n\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<Dialog open={open} onClose={handleClose}>\r\n\t\t\t<form\r\n\t\t\t\tkey={\"task-details-\" + goal.id + \"-folder-\" + folderId}\r\n\t\t\t\tonSubmit={handleSubmit(onSubmit)}\r\n\t\t\t>\r\n\t\t\t\t<DialogTitle className={classes.dialogTitle}>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tinputRef={register({\r\n\t\t\t\t\t\t\trequired: \"Goal can not be empty\",\r\n\t\t\t\t\t\t\tmaxLength: {\r\n\t\t\t\t\t\t\t\tvalue: 30,\r\n\t\t\t\t\t\t\t\tmessage: \"Max goal length is 30\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\tname=\"goalText\"\r\n\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\tinput: classes.taskInput,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tdefaultValue={goal.text}\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\terror={!!errors.goalText}\r\n\t\t\t\t\t\thelperText={errors.goalText?.message}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{tags.map((tag, tagId) => {\r\n\t\t\t\t\t\t\tif (deletedTags[tagId])\r\n\t\t\t\t\t\t\t\treturn <span key={\"tags-\" + tag.name + tag.color}></span>;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\t\t\tkey={\"tags-\" + tag.name + tag.color}\r\n\t\t\t\t\t\t\t\t\t\tlabel={tag.name}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tborderColor:\r\n\t\t\t\t\t\t\t\t\t\t\t\ttagId === newTagId\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? tags[newTagId].color\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: theme.palette.action.disabled,\r\n\t\t\t\t\t\t\t\t\t\t\tborderWidth: tagId === newTagId ? \"3.3px\" : \"2px\",\r\n\t\t\t\t\t\t\t\t\t\t\tbackground:\r\n\t\t\t\t\t\t\t\t\t\t\t\ttagId === newTagId\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? tags[newTagId].color + \"48\" // #48 - 0.3 opacity\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: theme.palette.chip,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonDelete={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetDeletedTags([\r\n\t\t\t\t\t\t\t\t\t\t\t\t...deletedTags.map((tagDeleted, deletedTagId) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (!tagDeleted) return deletedTagId === tagId;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (tagId === newTagId) setNewTagId(undefined);\r\n\t\t\t\t\t\t\t\t\t\t\telse setNewTagId(tagId);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.notes}>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\tcolor=\"textSecondary\"\r\n\t\t\t\t\t\t\tclassName={classes.notesLabel}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tNOTES\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tinputRef={register({\r\n\t\t\t\t\t\t\t\trequired: \"Note can not be empty\",\r\n\t\t\t\t\t\t\t\tmaxLength: {\r\n\t\t\t\t\t\t\t\t\tvalue: 50,\r\n\t\t\t\t\t\t\t\t\tmessage: \"Max note length is 50\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\terror={!!errors.noteText}\r\n\t\t\t\t\t\t\thelperText={errors.noteText?.message}\r\n\t\t\t\t\t\t\tname=\"noteText\"\r\n\t\t\t\t\t\t\tdefaultValue={goal.note}\r\n\t\t\t\t\t\t\tclassName={classes.infoFontSize}\r\n\t\t\t\t\t\t\tplaceholder=\"There is no notes, but you can change it!\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogActions style={{ paddingLeft: 0 }}>\r\n\t\t\t\t\t\t<DeleteDialogButton onClick={deleteCurrentTask}>\r\n\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t</DeleteDialogButton>\r\n\t\t\t\t\t\t<div className={classes.cancel}></div>\r\n\t\t\t\t\t\t<CancelDialogButton onClick={handleClose}>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</CancelDialogButton>\r\n\t\t\t\t\t\t<ApplyDialogButton type=\"submit\">Done</ApplyDialogButton>\r\n\t\t\t\t\t</DialogActions>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t</form>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n\r\nexport default TaskDetails;\r\n","import React, { useState } from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { GoalType } from \"./../../types/index_d\";\r\nimport TaskDetails from \"./TaskDetails/TaskDetails\";\r\nimport { Theme, makeStyles, StyleRules, Tooltip } from \"@material-ui/core\";\r\nimport { combineStyles } from \"../../utils/helpers\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n\tsetGoalAction,\r\n\tsetTagAction,\r\n\tdeleteTaskAction,\r\n\tsetNoteAction,\r\n\tdeleteTagAction,\r\n} from \"../../redux/actions/todo\";\r\nimport { useTypedSelector } from \"../../redux/reduxStore\";\r\n\r\nconst useStyles = makeStyles(\r\n\t(theme: Theme): StyleRules<string> => ({\r\n\t\titem: {\r\n\t\t\tposition: \"relative\",\r\n\t\t\tborderBottom: \"1px solid \" + theme.palette.action.selected,\r\n\t\t\tborderTop: \"1px solid \" + theme.palette.action.selected,\r\n\t\t\tboxShadow: theme.shadows[3],\r\n\t\t\tcursor: \"default\",\r\n\t\t\tzIndex: 0,\r\n\t\t\toverflow: \"hidden\",\r\n\t\t},\r\n\t\tcheckedText: {\r\n\t\t\ttextDecoration: \"line-through\",\r\n\t\t\topacity: 0.95,\r\n\t\t\tcolor: theme.palette.text.secondary,\r\n\t\t},\r\n\t\tnotSelectable: {\r\n\t\t\tuserSelect: \"none\",\r\n\t\t},\r\n\t\tcheckbox: {\r\n\t\t\t// \"&:hover\": {\r\n\t\t\t// \tcolor: theme.palette.primary.main,\r\n\t\t\t// },\r\n\t\t},\r\n\t})\r\n);\r\n\r\ntype PropsType = {\r\n\tgoal: GoalType;\r\n\tfolderId: number;\r\n\ttoggleCheckbox: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nconst ToDo = ({ goal, folderId, toggleCheckbox }: PropsType) => {\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst tags = useTypedSelector((state) => state.todo.tags);\r\n\r\n\tconst setGoal = (id: number, text: string, folderId: number) =>\r\n\t\tdispatch(setGoalAction(id, text, folderId));\r\n\tconst setNote = (id: number, newNote: string, folderId: number) =>\r\n\t\tdispatch(setNoteAction(id, newNote, folderId));\r\n\tconst deleteTask = (id: number, folderId: number) =>\r\n\t\tdispatch(deleteTaskAction(id, folderId));\r\n\tconst setTag = (\r\n\t\ttaskId: number,\r\n\t\ttagId: number | undefined,\r\n\t\tfolderId: number\r\n\t) => dispatch(setTagAction(taskId, tagId, folderId));\r\n\tconst deleteTag = (tagId: number) => dispatch(deleteTagAction(tagId));\r\n\r\n\tconst currentColor =\r\n\t\tgoal.tag === undefined ? undefined : tags[goal.tag].color;\r\n\tconst classes = useStyles();\r\n\tconst handleClick = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ListItem\r\n\t\t\t\tonClick={handleClick}\r\n\t\t\t\tclassName={classes.item}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tborderLeft:\r\n\t\t\t\t\t\tcurrentColor === undefined ? \"none\" : \"4px solid \" + currentColor,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Tooltip\r\n\t\t\t\t\ttitle={goal.tag === undefined ? \"\" : tags[goal.tag].name}\r\n\t\t\t\t\tplacement=\"right\"\r\n\t\t\t\t\tarrow\r\n\t\t\t\t>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName={combineStyles(\r\n\t\t\t\t\t\t\tgoal.checked ? classes.checkedText : \"\",\r\n\t\t\t\t\t\t\tclasses.notSelectable\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{goal.text}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tedge=\"end\"\r\n\t\t\t\t\t\tchecked={goal.checked}\r\n\t\t\t\t\t\tonChange={toggleCheckbox}\r\n\t\t\t\t\t\tvalue={goal.id}\r\n\t\t\t\t\t\tclassName={classes.checkbox}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t</ListItem>\r\n\t\t\t<TaskDetails\r\n\t\t\t\topen={open}\r\n\t\t\t\tsetOpen={setOpen}\r\n\t\t\t\tgoal={goal}\r\n\t\t\t\tsetGoal={setGoal}\r\n\t\t\t\tsetNote={setNote}\r\n\t\t\t\tdeleteTask={deleteTask}\r\n\t\t\t\tsetTag={setTag}\r\n\t\t\t\ttags={tags}\r\n\t\t\t\tdeleteTag={deleteTag}\r\n\t\t\t\tfolderId={folderId}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ToDo;\r\n","import React, { forwardRef, Ref } from \"react\";\r\n\r\ntype PropsType = {};\r\n\r\nconst BorderlessInput = forwardRef(\r\n\t(\r\n\t\tprops: PropsType & React.HTMLProps<HTMLInputElement>,\r\n\t\tref: Ref<HTMLInputElement>\r\n\t) => {\r\n\t\treturn (\r\n\t\t\t<input\r\n\t\t\t\t{...props}\r\n\t\t\t\tref={ref}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tstyle={{ ...props.style, border: \"none\", outline: \"none\" }}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default BorderlessInput;\r\n","import React, { useState, useRef } from \"react\";\r\nimport {\r\n\tTheme,\r\n\tStyleRules,\r\n\tmakeStyles,\r\n\tIconButton,\r\n\tuseTheme,\r\n} from \"@material-ui/core\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport { TaskFormDataType } from \"../../types/index_d\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addGoalAction } from \"../../redux/actions/todo\";\r\nimport BorderlessInput from \"../../assets/BorderlessInput\";\r\nimport { useCombinedRefs } from \"../../utils/helpers\";\r\n\r\nconst useStyles = makeStyles(\r\n\t(theme: Theme): StyleRules<string> => ({\r\n\t\troot: {\r\n\t\t\twidth: \"100%\",\r\n\t\t\theight: \"100%\",\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\tborderTop: \"2px solid \" + theme.palette.primary.main,\r\n\t\t\tflexDirection: \"row\",\r\n\t\t\tpadding: \"10px\",\r\n\t\t},\r\n\t\ttextField: {\r\n\t\t\tmarginRight: \"10px\",\r\n\t\t\tflexGrow: 1,\r\n\t\t\tborder: \"1px solid darkgrey\",\r\n\t\t\tborderRadius: \"20px\",\r\n\t\t\tpadding: \"6px\",\r\n\t\t\theight: \"40px\",\r\n\t\t},\r\n\t\tsendButton: {\r\n\t\t\tborder: \"1px solid darkgrey\",\r\n\t\t\theight: \"40px\",\r\n\t\t\twidth: \"40px\",\r\n\t\t\tpadding: \"7px\",\r\n\t\t\t\"&:hover, &:active\": {\r\n\t\t\t\tbackground: theme.palette.primary.main,\r\n\t\t\t\tborder: \"none\",\r\n\t\t\t},\r\n\t\t\t\"&:hover *, &:active *\": {\r\n\t\t\t\tcolor: \"white\",\r\n\t\t\t},\r\n\t\t\ttransition: \"all .4s\",\r\n\t\t},\r\n\t\ticon: {\r\n\t\t\talignSelf: \"center\",\r\n\t\t},\r\n\t\tfocusedButton: {\r\n\t\t\tbackground: theme.palette.primary.main,\r\n\t\t\tborder: \"none\",\r\n\t\t\t\"& svg\": {\r\n\t\t\t\tcolor: \"white\",\r\n\t\t\t},\r\n\t\t},\r\n\t\tinput: {\r\n\t\t\twidth: \"100%\",\r\n\t\t\theight: \"100%\",\r\n\t\t\tpadding: \"5px\",\r\n\t\t\tfontSize: \"1.1em\",\r\n\t\t\tbackground: \"transparent\",\r\n\t\t\tcolor: theme.palette.text.primary,\r\n\t\t},\r\n\t})\r\n);\r\n\r\ntype PropsType = {\r\n\tfolderId: number;\r\n};\r\n\r\nconst AddGoal = ({ folderId }: PropsType) => {\r\n\tconst classes = useStyles();\r\n\tconst dispatch = useDispatch();\r\n\tconst theme = useTheme();\r\n\tconst textField = useRef<null | HTMLInputElement>(null);\r\n\tconst addGoal = (newGoal: string, folderId: number) =>\r\n\t\tdispatch(addGoalAction(newGoal, folderId));\r\n\tconst [moving, setMoving] = useState(false);\r\n\tconst [focused, setFocused] = useState(false);\r\n\tconst props = useSpring({\r\n\t\tto: [\r\n\t\t\t{\r\n\t\t\t\topacity: 1,\r\n\t\t\t\ttransform: \"translate3d(0, -10px, 0 )\",\r\n\t\t\t\timmediate: false,\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\tmass: 3,\r\n\t\t\t\t\ttension: 700,\r\n\t\t\t\t\tfriction: 40,\r\n\t\t\t\t\tvelocity: 30,\r\n\t\t\t\t\tclamp: true,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\topacity: 0,\r\n\t\t\t\ttransform: \"translate3d(0, 20px, 0 )\",\r\n\t\t\t\timmediate: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\topacity: 1,\r\n\t\t\t\ttransform: \"translate3d(0, 0, 0)\",\r\n\t\t\t\timmediate: false,\r\n\t\t\t\tconfig: { mass: 1, tension: 400, friction: 40, velocity: 30 },\r\n\t\t\t},\r\n\t\t],\r\n\t\tonRest: () => {\r\n\t\t\tsetMoving(false);\r\n\t\t},\r\n\t});\r\n\r\n\tconst props2 = useSpring({\r\n\t\tto: [\r\n\t\t\t{\r\n\t\t\t\topacity: 0,\r\n\t\t\t\ttransform: \"translate3d(0, -10px, 0 )\",\r\n\t\t\t\timmediate: false,\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\tmass: 3,\r\n\t\t\t\t\ttension: 700,\r\n\t\t\t\t\tfriction: 40,\r\n\t\t\t\t\tvelocity: 30,\r\n\t\t\t\t\tclamp: true,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\topacity: 0,\r\n\t\t\t\ttransform: \"translate3d(0, 20px, 0 )\",\r\n\t\t\t\timmediate: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\topacity: 1,\r\n\t\t\t\ttransform: \"translate3d(0, 0, 0)\",\r\n\t\t\t\timmediate: false,\r\n\t\t\t\tconfig: { mass: 1, tension: 400, friction: 40, velocity: 30 },\r\n\t\t\t},\r\n\t\t],\r\n\t\tonRest: () => {\r\n\t\t\tsetMoving(false);\r\n\t\t},\r\n\t});\r\n\tfunction handleOffFocus() {\r\n\t\tif (!moving) {\r\n\t\t\tsetFocused(false);\r\n\t\t} else {\r\n\t\t\ttextField.current?.focus();\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmit = (data: TaskFormDataType) => {\r\n\t\taddGoal(data.goalText, folderId);\r\n\t\ttextField.current?.focus();\r\n\t\tsetValue(\"goalText\", \"\");\r\n\t\tif (!errors.goalText?.message) setMoving(true);\r\n\t\telse setMoving(false);\r\n\t};\r\n\r\n\tconst { register, handleSubmit, errors, setValue } = useForm<\r\n\t\tTaskFormDataType\r\n\t>();\r\n\treturn (\r\n\t\t<form\r\n\t\t\tkey={folderId}\r\n\t\t\tonSubmit={handleSubmit(onSubmit)}\r\n\t\t\tclassName={classes.root}\r\n\t\t>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tborderColor: !!errors.goalText\r\n\t\t\t\t\t\t? theme.palette.secondary.main\r\n\t\t\t\t\t\t: focused\r\n\t\t\t\t\t\t? theme.palette.primary.main\r\n\t\t\t\t\t\t: \"darkgrey\",\r\n\t\t\t\t\tborderWidth: !!errors.goalText || focused ? \"2px\" : \"1px\",\r\n\t\t\t\t}}\r\n\t\t\t\tclassName={classes.textField}\r\n\t\t\t>\r\n\t\t\t\t<animated.div\r\n\t\t\t\t\tkey={\"animated.div\" + folderId}\r\n\t\t\t\t\tstyle={moving ? props2 : {}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<BorderlessInput\r\n\t\t\t\t\t\tplaceholder=\"Add goal\"\r\n\t\t\t\t\t\tname=\"goalText\"\r\n\t\t\t\t\t\tclassName={classes.input}\r\n\t\t\t\t\t\tref={useCombinedRefs(\r\n\t\t\t\t\t\t\tregister({\r\n\t\t\t\t\t\t\t\trequired: \"Goal can not be empty\",\r\n\t\t\t\t\t\t\t\tmaxLength: {\r\n\t\t\t\t\t\t\t\t\tvalue: 40,\r\n\t\t\t\t\t\t\t\t\tmessage: \"Max goal length is 30\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\ttextField\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\tonFocus={() => setFocused(true)}\r\n\t\t\t\t\t\tonBlur={handleOffFocus}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</animated.div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<IconButton\r\n\t\t\t\tclassName={\r\n\t\t\t\t\tclasses.sendButton + \" \" + (focused ? classes.focusedButton : \"\")\r\n\t\t\t\t}\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t>\r\n\t\t\t\t<animated.div\r\n\t\t\t\t\tkey={\"animated.div\" + folderId}\r\n\t\t\t\t\tstyle={moving ? props : {}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ArrowUpwardIcon className={classes.icon} />\r\n\t\t\t\t</animated.div>\r\n\t\t\t</IconButton>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default AddGoal;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    makeStyles,\r\n    Theme,\r\n    StyleRules,\r\n    Typography,\r\n    Divider,\r\n    useTheme,\r\n    Menu,\r\n    MenuItem,\r\n    Tooltip,\r\n} from \"@material-ui/core\";\r\nimport FolderIcon from \"@material-ui/icons/FolderOutlined\";\r\nimport { FolderType } from \"../../types/index_d\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    setCurrentFoldersAction,\r\n    swapCurrentFoldersAction,\r\n} from \"../../redux/actions/todo\";\r\n\r\nconst useStyles = makeStyles(\r\n    (theme: Theme): StyleRules<string> => ({\r\n        root: {\r\n            display: \"flex\",\r\n            background: theme.palette.background.paper,\r\n            marginLeft: \"30px\",\r\n            marginRight: \"80px\",\r\n            marginTop: \"10px\",\r\n            borderRadius: \"100px\",\r\n            height: \"35px\",\r\n            padding: \"7px\",\r\n            alignItems: \"center\",\r\n        },\r\n        text: {\r\n            marginRight: \"20px\",\r\n        },\r\n        divider: {\r\n            marginRight: \"20px\",\r\n        },\r\n        test: {\r\n            display: \"inline-block\",\r\n        },\r\n        icon: {\r\n            marginRight: \"2px\",\r\n            \"&:hover\": {\r\n                color: theme.palette.primary.main,\r\n            },\r\n        },\r\n    })\r\n);\r\n\r\ntype PropsType = {\r\n    headline: string;\r\n    folders: ReadonlyArray<FolderType>;\r\n    folderId: number;\r\n};\r\n\r\nconst FolderLabel = ({ headline, folders, folderId }: PropsType) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [tooltipOpened, setTooltipOpened] = useState(false);\r\n\r\n    const setCurrentFolders = (from: number, folderId: number) =>\r\n        dispatch(setCurrentFoldersAction(from, folderId));\r\n    const swapCurrentFolders = (from: number, to: number) =>\r\n        dispatch(swapCurrentFoldersAction(from, to));\r\n\r\n    const handleTooltipClose = () => {\r\n        setTooltipOpened(false);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    return (\r\n        <div className={classes.test}>\r\n            <div className={classes.root}>\r\n                <Typography variant=\"h5\" className={classes.text}>\r\n                    {headline}\r\n                </Typography>\r\n                <Divider\r\n                    orientation=\"vertical\"\r\n                    className={classes.divider}\r\n                    style={{ background: theme.palette.divider, width: \"1px\" }}\r\n                />\r\n                <Tooltip\r\n                    placement=\"right\"\r\n                    open={tooltipOpened}\r\n                    onClose={handleTooltipClose}\r\n                    title=\"There is no active folders left\"\r\n                >\r\n                    <FolderIcon\r\n                        onClick={handleClick}\r\n                        className={classes.icon}\r\n                    />\r\n                </Tooltip>\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >\r\n                    {folders.map((folder, id) => {\r\n                        if (id === folderId)\r\n                            return (\r\n                                <div\r\n                                    key={folder.headline + folder.id + \"menu\"}\r\n                                />\r\n                            );\r\n                        else\r\n                            return (\r\n                                <MenuItem\r\n                                    key={folder.headline + folder.id + \"menu\"}\r\n                                    onClick={() => {\r\n                                        if (folder.shown)\r\n                                            swapCurrentFolders(folderId, id);\r\n                                        else setCurrentFolders(folderId, id);\r\n                                        handleClose();\r\n                                    }}\r\n                                >\r\n                                    {folder.headline}\r\n                                </MenuItem>\r\n                            );\r\n                    })}\r\n                </Menu>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FolderLabel;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Theme, StyleRules, Typography, useTheme } from \"@material-ui/core\";\r\nimport DraggableItem from \"../../assets/DraggableItem\";\r\nimport DroppableItem from \"../../assets/DroppableItem\";\r\nimport ToDo from \"./ToDo\";\r\nimport { FolderType } from \"../../types/index_d\";\r\nimport AddGoal from \"./AddGoal\";\r\nimport { useTypedSelector } from \"../../redux/reduxStore\";\r\nimport { DraggingStyle, NotDraggingStyle } from \"react-beautiful-dnd\";\r\nimport FolderLabel from \"./FolderLabel\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleCheckedAction } from \"../../redux/actions/todo\";\r\n\r\nconst useStyles = makeStyles(\r\n\t(theme: Theme): StyleRules<string> => ({\r\n\t\troot: {\r\n\t\t\tpaddingLeft: theme.spacing(3),\r\n\t\t\tpaddingRight: theme.spacing(3),\r\n\t\t},\r\n\t\tlist: {\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\tflexDirection: \"column\",\r\n\t\t\tjustifyContent: \"center\",\r\n\t\t},\r\n\t\tpaper: {\r\n\t\t\tboxShadow: theme.shadows[6],\r\n\t\t\tmarginTop: \"10px\",\r\n\t\t\tmarginBottom: \"20px\",\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\tflexDirection: \"column\",\r\n\t\t\tbackground: theme.palette.background.paper,\r\n\t\t\tborderRadius: \"10px\",\r\n\t\t},\r\n\t\tgoals: {\r\n\t\t\tpadding: \"4%\",\r\n\t\t},\r\n\t})\r\n);\r\n\r\ninterface PropsType {\r\n\tfolderId: number;\r\n}\r\n\r\nconst ToDoList = ({ folderId }: PropsType) => {\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst folders = useTypedSelector((state) => state.todo.folders);\r\n\tconst currentFolder: FolderType = useTypedSelector(\r\n\t\t(state) => state.todo.folders[folderId]\r\n\t);\r\n\r\n\tconst toggleChecked = (id: number, folderId: number) =>\r\n\t\tdispatch(toggleCheckedAction(id, folderId));\r\n\r\n\tconst toggleCheckbox = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (e.target.value) toggleChecked(parseInt(e.target.value), folderId);\r\n\t};\r\n\r\n\tconst getItemStyle = (\r\n\t\tisDragging: boolean,\r\n\t\tdraggableStyle: DraggingStyle | NotDraggingStyle | undefined\r\n\t) => ({\r\n\t\tbackground: isDragging\r\n\t\t\t? theme.palette.divider\r\n\t\t\t: theme.palette.background.paper,\r\n\t\t...draggableStyle,\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<FolderLabel\r\n\t\t\t\tfolders={folders}\r\n\t\t\t\tfolderId={folderId}\r\n\t\t\t\theadline={currentFolder.headline}\r\n\t\t\t/>\r\n\t\t\t<div className={classes.paper}>\r\n\t\t\t\t<div className={classes.goals}>\r\n\t\t\t\t\t<Typography align=\"center\" variant=\"h4\">\r\n\t\t\t\t\t\t{currentFolder.headline}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<DroppableItem droppableId={\"DroppableToDo-\" + folderId}>\r\n\t\t\t\t\t\t<List className={classes.list}>\r\n\t\t\t\t\t\t\t{currentFolder.goals.map((goal) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<DraggableItem\r\n\t\t\t\t\t\t\t\t\t\tid={goal.id}\r\n\t\t\t\t\t\t\t\t\t\tkey={\"Goal-id: \" + goal.id + \" Folder-id: \" + folderId}\r\n\t\t\t\t\t\t\t\t\t\tadding={folderId.toString()}\r\n\t\t\t\t\t\t\t\t\t\tgetItemStyle={getItemStyle}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<ToDo\r\n\t\t\t\t\t\t\t\t\t\t\ttoggleCheckbox={toggleCheckbox}\r\n\t\t\t\t\t\t\t\t\t\t\tfolderId={folderId}\r\n\t\t\t\t\t\t\t\t\t\t\tgoal={goal}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</DraggableItem>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</DroppableItem>\r\n\t\t\t\t</div>\r\n\t\t\t\t<AddGoal folderId={folderId} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ToDoList;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport ToDoList from \"./ToDoList/ToDoList\";\r\nimport { useTypedSelector } from \"../redux/reduxStore\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { swapTasksAction } from \"../redux/actions/todo\";\r\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\r\nimport { getIntSecondPart } from \"../utils/helpers\";\r\n\r\nconst Folders = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst swapTasks = (\r\n\t\tfrom: number,\r\n\t\tto: number,\r\n\t\tfromFolderId: number,\r\n\t\ttoFolderId: number\r\n\t) => dispatch(swapTasksAction(from, to, fromFolderId, toFolderId));\r\n\tconst currentFolders = useTypedSelector((state) => state.todo.currentFolders);\r\n\tconst onDragEnd = (result: DropResult) => {\r\n\t\tif (!result.destination) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tswapTasks(\r\n\t\t\tresult.source.index,\r\n\t\t\tresult.destination.index,\r\n\t\t\tgetIntSecondPart(result.source.droppableId, \"-\"),\r\n\t\t\tgetIntSecondPart(result.destination.droppableId, \"-\")\r\n\t\t);\r\n\t};\r\n\treturn (\r\n\t\t<Grid container direction=\"row\" justify=\"flex-start\">\r\n\t\t\t<DragDropContext onDragEnd={onDragEnd}>\r\n\t\t\t\t<Grid item xs={12} sm={6} md={4}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<ToDoList folderId={currentFolders[0]} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} sm={6} md={4}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<ToDoList folderId={currentFolders[1]} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} sm={6} md={4}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<ToDoList folderId={currentFolders[2]} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t</DragDropContext>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default Folders;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header/Header\";\r\nimport store, { useTypedSelector } from \"./redux/reduxStore\";\r\nimport { Provider, useDispatch } from \"react-redux\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { setDrawerOpenedAction } from \"./redux/actions/ui\";\r\nimport Folders from \"./components/Folders\";\r\n\r\nconst lightTheme = createMuiTheme({\r\n\tpalette: {\r\n\t\ttype: \"light\",\r\n\t\tchip: \"#E0E0E0\",\r\n\t\tsuccess: {\r\n\t\t\tmain: \"#558B2F\",\r\n\t\t\tdark: \"#33691E\",\r\n\t\t},\r\n\t\tbackground: {\r\n\t\t\tdefault: \"#D3D3D3\",\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst darkTheme = createMuiTheme({\r\n\tpalette: {\r\n\t\ttype: \"dark\",\r\n\t\tchip: \"#535353\",\r\n\t\tprimary: {\r\n\t\t\tmain: \"#2196F3\",\r\n\t\t},\r\n\t\tsuccess: {\r\n\t\t\tmain: \"#2a9d8f\",\r\n\t\t\tdark: \"#028090\",\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: \"#e63946\",\r\n\t\t},\r\n\t\taction: {\r\n\t\t\tdisabledBackground: \"#121212\",\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst App = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst isLight = useTypedSelector((state) => state.ui.isLight);\r\n\tconst drawerOpened = useTypedSelector((state) => state.ui.drawerOpened);\r\n\r\n\tconst setDrawerOpened = (open: boolean) =>\r\n\t\tdispatch(setDrawerOpenedAction(open));\r\n\r\n\treturn (\r\n\t\t<div className=\"app-wrapper\">\r\n\t\t\t<ThemeProvider theme={isLight ? lightTheme : darkTheme}>\r\n\t\t\t\t<Header open={drawerOpened} setOpen={setDrawerOpened}>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path=\"/folders/\" render={() => <Folders />} />\r\n\t\t\t\t\t\t<Route exact path=\"/\" render={() => <Folders />} />\r\n\t\t\t\t\t\t<Route exact path=\"/react-todolist\" render={() => <Folders />} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Header>\r\n\t\t\t</ThemeProvider>\r\n\t\t\t<div\r\n\t\t\t\tclassName={drawerOpened ? \"overlay\" : \"\"}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetDrawerOpened(false);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst MainApp = () => {\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<App />\r\n\t\t\t</Provider>\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default MainApp;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}